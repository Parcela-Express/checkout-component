/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Logo from './Logo';
import Merchant from './Merchant';
import Role from './Role';
import Seller from './Seller';
import Theme from './Theme';

/**
 * The User model module.
 * @module model/User
 * @version 1.0
 */
class User {
    /**
     * Constructs a new <code>User</code>.
     * @alias module:model/User
     * @param name {String} 
     * @param email {String} 
     * @param password {String} 
     * @param type {module:model/User.TypeEnum} 
     * @param status {module:model/User.StatusEnum} 
     */
    constructor(name, email, password, type, status) { 
        
        User.initialize(this, name, email, password, type, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, email, password, type, status) { 
        obj['name'] = name;
        obj['email'] = email;
        obj['password'] = password;
        obj['type'] = type;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/User} obj Optional instance to populate.
     * @return {module:model/User} The populated <code>User</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new User();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = Role.constructFromObject(data['role']);
            }
            if (data.hasOwnProperty('role_id')) {
                obj['role_id'] = ApiClient.convertToType(data['role_id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('id_token')) {
                obj['id_token'] = ApiClient.convertToType(data['id_token'], 'String');
            }
            if (data.hasOwnProperty('refresh_token')) {
                obj['refresh_token'] = ApiClient.convertToType(data['refresh_token'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('merchant')) {
                obj['merchant'] = Merchant.constructFromObject(data['merchant']);
            }
            if (data.hasOwnProperty('merchant_id')) {
                obj['merchant_id'] = ApiClient.convertToType(data['merchant_id'], 'String');
            }
            if (data.hasOwnProperty('seller')) {
                obj['seller'] = Seller.constructFromObject(data['seller']);
            }
            if (data.hasOwnProperty('seller_id')) {
                obj['seller_id'] = ApiClient.convertToType(data['seller_id'], 'String');
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = Logo.constructFromObject(data['logo']);
            }
            if (data.hasOwnProperty('logo_id')) {
                obj['logo_id'] = ApiClient.convertToType(data['logo_id'], 'String');
            }
            if (data.hasOwnProperty('theme')) {
                obj['theme'] = Theme.constructFromObject(data['theme']);
            }
            if (data.hasOwnProperty('theme_id')) {
                obj['theme_id'] = ApiClient.convertToType(data['theme_id'], 'String');
            }
            if (data.hasOwnProperty('subjects')) {
                obj['subjects'] = ApiClient.convertToType(data['subjects'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
User.prototype['id'] = undefined;

/**
 * @member {String} name
 */
User.prototype['name'] = undefined;

/**
 * @member {String} email
 */
User.prototype['email'] = undefined;

/**
 * @member {String} password
 */
User.prototype['password'] = undefined;

/**
 * @member {module:model/User.TypeEnum} type
 */
User.prototype['type'] = undefined;

/**
 * @member {module:model/Role} role
 */
User.prototype['role'] = undefined;

/**
 * @member {String} role_id
 */
User.prototype['role_id'] = undefined;

/**
 * @member {module:model/User.StatusEnum} status
 */
User.prototype['status'] = undefined;

/**
 * @member {String} id_token
 */
User.prototype['id_token'] = undefined;

/**
 * @member {String} refresh_token
 */
User.prototype['refresh_token'] = undefined;

/**
 * @member {String} created_at
 */
User.prototype['created_at'] = undefined;

/**
 * @member {module:model/Merchant} merchant
 */
User.prototype['merchant'] = undefined;

/**
 * @member {String} merchant_id
 */
User.prototype['merchant_id'] = undefined;

/**
 * @member {module:model/Seller} seller
 */
User.prototype['seller'] = undefined;

/**
 * @member {String} seller_id
 */
User.prototype['seller_id'] = undefined;

/**
 * @member {module:model/Logo} logo
 */
User.prototype['logo'] = undefined;

/**
 * @member {String} logo_id
 */
User.prototype['logo_id'] = undefined;

/**
 * @member {module:model/Theme} theme
 */
User.prototype['theme'] = undefined;

/**
 * @member {String} theme_id
 */
User.prototype['theme_id'] = undefined;

/**
 * @member {Array.<String>} subjects
 */
User.prototype['subjects'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
User['TypeEnum'] = {

    /**
     * value: "merchant"
     * @const
     */
    "merchant": "merchant",

    /**
     * value: "seller"
     * @const
     */
    "seller": "seller",

    /**
     * value: "backoffice"
     * @const
     */
    "backoffice": "backoffice"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
User['StatusEnum'] = {

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive",

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending"
};



export default User;

