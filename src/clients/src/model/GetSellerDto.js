/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetAcquirerDto from './GetAcquirerDto';
import GetAddressDto from './GetAddressDto';
import GetBankAccountDto from './GetBankAccountDto';
import GetLogoDto from './GetLogoDto';
import GetMerchantDto from './GetMerchantDto';
import GetSellerSalePlanDto from './GetSellerSalePlanDto';
import GetThemeDto from './GetThemeDto';
import ProtocolCustomizations from './ProtocolCustomizations';
import Responsible from './Responsible';
import SellerEmails from './SellerEmails';

/**
 * The GetSellerDto model module.
 * @module model/GetSellerDto
 * @version 1.0
 */
class GetSellerDto {
    /**
     * Constructs a new <code>GetSellerDto</code>.
     * @alias module:model/GetSellerDto
     * @param id {String} 
     * @param name {String} 
     * @param description {String} 
     * @param document {String} 
     * @param state_registration {String} 
     * @param code {String} 
     * @param created_at {String} 
     * @param settlement_type {module:model/GetSellerDto.SettlementTypeEnum} 
     * @param address {module:model/GetAddressDto} 
     * @param bank_account {module:model/GetBankAccountDto} 
     * @param monthly_billing {Number} 
     * @param covenant {String} 
     * @param is_split {Boolean} 
     * @param phone {String} 
     * @param secondary_phone {String} 
     * @param tertiary_phone {String} 
     * @param status {module:model/GetSellerDto.StatusEnum} 
     * @param type {module:model/GetSellerDto.TypeEnum} 
     * @param merchant {module:model/GetMerchantDto} 
     * @param sale_plan {module:model/GetSellerSalePlanDto} 
     * @param sale_plan_id {String} 
     * @param accounting_account_settlement_id {String} 
     * @param totalBatch {Number} 
     * @param latestSettlement {Number} 
     * @param pix_pos {Boolean} 
     * @param billet_provider {module:model/GetSellerDto.BilletProviderEnum} 
     */
    constructor(id, name, description, document, state_registration, code, created_at, settlement_type, address, bank_account, monthly_billing, covenant, is_split, phone, secondary_phone, tertiary_phone, status, type, merchant, sale_plan, sale_plan_id, accounting_account_settlement_id, totalBatch, latestSettlement, pix_pos, billet_provider) { 
        
        GetSellerDto.initialize(this, id, name, description, document, state_registration, code, created_at, settlement_type, address, bank_account, monthly_billing, covenant, is_split, phone, secondary_phone, tertiary_phone, status, type, merchant, sale_plan, sale_plan_id, accounting_account_settlement_id, totalBatch, latestSettlement, pix_pos, billet_provider);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, description, document, state_registration, code, created_at, settlement_type, address, bank_account, monthly_billing, covenant, is_split, phone, secondary_phone, tertiary_phone, status, type, merchant, sale_plan, sale_plan_id, accounting_account_settlement_id, totalBatch, latestSettlement, pix_pos, billet_provider) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['description'] = description;
        obj['document'] = document;
        obj['state_registration'] = state_registration;
        obj['code'] = code;
        obj['created_at'] = created_at;
        obj['settlement_type'] = settlement_type;
        obj['address'] = address;
        obj['bank_account'] = bank_account;
        obj['monthly_billing'] = monthly_billing;
        obj['covenant'] = covenant;
        obj['is_split'] = is_split;
        obj['phone'] = phone;
        obj['secondary_phone'] = secondary_phone;
        obj['tertiary_phone'] = tertiary_phone;
        obj['status'] = status;
        obj['type'] = type;
        obj['merchant'] = merchant;
        obj['sale_plan'] = sale_plan;
        obj['sale_plan_id'] = sale_plan_id;
        obj['accounting_account_settlement_id'] = accounting_account_settlement_id;
        obj['totalBatch'] = totalBatch;
        obj['latestSettlement'] = latestSettlement;
        obj['pix_pos'] = pix_pos;
        obj['billet_provider'] = billet_provider;
    }

    /**
     * Constructs a <code>GetSellerDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSellerDto} obj Optional instance to populate.
     * @return {module:model/GetSellerDto} The populated <code>GetSellerDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSellerDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('document')) {
                obj['document'] = ApiClient.convertToType(data['document'], 'String');
            }
            if (data.hasOwnProperty('document_ofac')) {
                obj['document_ofac'] = ApiClient.convertToType(data['document_ofac'], 'Boolean');
            }
            if (data.hasOwnProperty('document_onu')) {
                obj['document_onu'] = ApiClient.convertToType(data['document_onu'], 'Boolean');
            }
            if (data.hasOwnProperty('document_rf')) {
                obj['document_rf'] = ApiClient.convertToType(data['document_rf'], 'Boolean');
            }
            if (data.hasOwnProperty('state_registration')) {
                obj['state_registration'] = ApiClient.convertToType(data['state_registration'], 'String');
            }
            if (data.hasOwnProperty('cns')) {
                obj['cns'] = ApiClient.convertToType(data['cns'], 'String');
            }
            if (data.hasOwnProperty('cnae')) {
                obj['cnae'] = ApiClient.convertToType(data['cnae'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('assignment')) {
                obj['assignment'] = ApiClient.convertToType(data['assignment'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('absorb_costs')) {
                obj['absorb_costs'] = ApiClient.convertToType(data['absorb_costs'], ['String']);
            }
            if (data.hasOwnProperty('settlement_type')) {
                obj['settlement_type'] = ApiClient.convertToType(data['settlement_type'], 'String');
            }
            if (data.hasOwnProperty('acquirers')) {
                obj['acquirers'] = ApiClient.convertToType(data['acquirers'], [GetAcquirerDto]);
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = GetAddressDto.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('bank_account')) {
                obj['bank_account'] = GetBankAccountDto.constructFromObject(data['bank_account']);
            }
            if (data.hasOwnProperty('monthly_billing')) {
                obj['monthly_billing'] = ApiClient.convertToType(data['monthly_billing'], 'Number');
            }
            if (data.hasOwnProperty('covenant')) {
                obj['covenant'] = ApiClient.convertToType(data['covenant'], 'String');
            }
            if (data.hasOwnProperty('is_split')) {
                obj['is_split'] = ApiClient.convertToType(data['is_split'], 'Boolean');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('secondary_phone')) {
                obj['secondary_phone'] = ApiClient.convertToType(data['secondary_phone'], 'String');
            }
            if (data.hasOwnProperty('tertiary_phone')) {
                obj['tertiary_phone'] = ApiClient.convertToType(data['tertiary_phone'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('merchant')) {
                obj['merchant'] = GetMerchantDto.constructFromObject(data['merchant']);
            }
            if (data.hasOwnProperty('sale_plan')) {
                obj['sale_plan'] = GetSellerSalePlanDto.constructFromObject(data['sale_plan']);
            }
            if (data.hasOwnProperty('sale_plan_id')) {
                obj['sale_plan_id'] = ApiClient.convertToType(data['sale_plan_id'], 'String');
            }
            if (data.hasOwnProperty('accounting_account_settlement_id')) {
                obj['accounting_account_settlement_id'] = ApiClient.convertToType(data['accounting_account_settlement_id'], 'String');
            }
            if (data.hasOwnProperty('totalBatch')) {
                obj['totalBatch'] = ApiClient.convertToType(data['totalBatch'], 'Number');
            }
            if (data.hasOwnProperty('latestSettlement')) {
                obj['latestSettlement'] = ApiClient.convertToType(data['latestSettlement'], 'Number');
            }
            if (data.hasOwnProperty('pix_pos')) {
                obj['pix_pos'] = ApiClient.convertToType(data['pix_pos'], 'Boolean');
            }
            if (data.hasOwnProperty('billet_provider')) {
                obj['billet_provider'] = ApiClient.convertToType(data['billet_provider'], 'String');
            }
            if (data.hasOwnProperty('is_assignor')) {
                obj['is_assignor'] = ApiClient.convertToType(data['is_assignor'], 'Boolean');
            }
            if (data.hasOwnProperty('no_payment_methods')) {
                obj['no_payment_methods'] = ApiClient.convertToType(data['no_payment_methods'], ['String']);
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = GetLogoDto.constructFromObject(data['logo']);
            }
            if (data.hasOwnProperty('theme')) {
                obj['theme'] = GetThemeDto.constructFromObject(data['theme']);
            }
            if (data.hasOwnProperty('has_split_rules')) {
                obj['has_split_rules'] = ApiClient.convertToType(data['has_split_rules'], 'Boolean');
            }
            if (data.hasOwnProperty('confirmation_payment_limit')) {
                obj['confirmation_payment_limit'] = ApiClient.convertToType(data['confirmation_payment_limit'], 'Boolean');
            }
            if (data.hasOwnProperty('confirmation_payment_limit_days')) {
                obj['confirmation_payment_limit_days'] = ApiClient.convertToType(data['confirmation_payment_limit_days'], 'Number');
            }
            if (data.hasOwnProperty('protocol_customizations')) {
                obj['protocol_customizations'] = ProtocolCustomizations.constructFromObject(data['protocol_customizations']);
            }
            if (data.hasOwnProperty('pix_provider')) {
                obj['pix_provider'] = ApiClient.convertToType(data['pix_provider'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('secondary_email')) {
                obj['secondary_email'] = ApiClient.convertToType(data['secondary_email'], 'String');
            }
            if (data.hasOwnProperty('tertiary_email')) {
                obj['tertiary_email'] = ApiClient.convertToType(data['tertiary_email'], 'String');
            }
            if (data.hasOwnProperty('custom_emails')) {
                obj['custom_emails'] = SellerEmails.constructFromObject(data['custom_emails']);
            }
            if (data.hasOwnProperty('no_spreading_pix')) {
                obj['no_spreading_pix'] = ApiClient.convertToType(data['no_spreading_pix'], 'Boolean');
            }
            if (data.hasOwnProperty('responsibles')) {
                obj['responsibles'] = ApiClient.convertToType(data['responsibles'], [Responsible]);
            }
            if (data.hasOwnProperty('owner_name')) {
                obj['owner_name'] = ApiClient.convertToType(data['owner_name'], 'String');
            }
            if (data.hasOwnProperty('owner_document')) {
                obj['owner_document'] = ApiClient.convertToType(data['owner_document'], 'String');
            }
            if (data.hasOwnProperty('owner_document_ofac')) {
                obj['owner_document_ofac'] = ApiClient.convertToType(data['owner_document_ofac'], 'Boolean');
            }
            if (data.hasOwnProperty('owner_document_onu')) {
                obj['owner_document_onu'] = ApiClient.convertToType(data['owner_document_onu'], 'Boolean');
            }
            if (data.hasOwnProperty('owner_document_pep')) {
                obj['owner_document_pep'] = ApiClient.convertToType(data['owner_document_pep'], 'Boolean');
            }
            if (data.hasOwnProperty('owner_document_ref')) {
                obj['owner_document_ref'] = ApiClient.convertToType(data['owner_document_ref'], 'Boolean');
            }
            if (data.hasOwnProperty('owner_birth')) {
                obj['owner_birth'] = ApiClient.convertToType(data['owner_birth'], 'String');
            }
            if (data.hasOwnProperty('frontier')) {
                obj['frontier'] = ApiClient.convertToType(data['frontier'], 'Boolean');
            }
            if (data.hasOwnProperty('erp')) {
                obj['erp'] = ApiClient.convertToType(data['erp'], 'String');
            }
            if (data.hasOwnProperty('three_ds_active')) {
                obj['three_ds_active'] = ApiClient.convertToType(data['three_ds_active'], 'Boolean');
            }
            if (data.hasOwnProperty('min_three_ds')) {
                obj['min_three_ds'] = ApiClient.convertToType(data['min_three_ds'], 'Number');
            }
            if (data.hasOwnProperty('three_ds_value')) {
                obj['three_ds_value'] = ApiClient.convertToType(data['three_ds_value'], 'Number');
            }
            if (data.hasOwnProperty('risk_active')) {
                obj['risk_active'] = ApiClient.convertToType(data['risk_active'], 'Boolean');
            }
            if (data.hasOwnProperty('min_risk')) {
                obj['min_risk'] = ApiClient.convertToType(data['min_risk'], 'Number');
            }
            if (data.hasOwnProperty('risk_value')) {
                obj['risk_value'] = ApiClient.convertToType(data['risk_value'], 'Number');
            }
            if (data.hasOwnProperty('billet_code')) {
                obj['billet_code'] = ApiClient.convertToType(data['billet_code'], 'Boolean');
            }
            if (data.hasOwnProperty('card_payer_check')) {
                obj['card_payer_check'] = ApiClient.convertToType(data['card_payer_check'], 'Boolean');
            }
            if (data.hasOwnProperty('card_payer_check_min_value')) {
                obj['card_payer_check_min_value'] = ApiClient.convertToType(data['card_payer_check_min_value'], 'Number');
            }
            if (data.hasOwnProperty('extract_name')) {
                obj['extract_name'] = ApiClient.convertToType(data['extract_name'], 'String');
            }
            if (data.hasOwnProperty('accreditation_status')) {
                obj['accreditation_status'] = ApiClient.convertToType(data['accreditation_status'], 'String');
            }
            if (data.hasOwnProperty('celcoin_value')) {
                obj['celcoin_value'] = ApiClient.convertToType(data['celcoin_value'], 'Number');
            }
            if (data.hasOwnProperty('celcoin_fee_type')) {
                obj['celcoin_fee_type'] = ApiClient.convertToType(data['celcoin_fee_type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
GetSellerDto.prototype['id'] = undefined;

/**
 * @member {String} name
 */
GetSellerDto.prototype['name'] = undefined;

/**
 * @member {String} description
 */
GetSellerDto.prototype['description'] = undefined;

/**
 * @member {String} document
 */
GetSellerDto.prototype['document'] = undefined;

/**
 * @member {Boolean} document_ofac
 */
GetSellerDto.prototype['document_ofac'] = undefined;

/**
 * @member {Boolean} document_onu
 */
GetSellerDto.prototype['document_onu'] = undefined;

/**
 * @member {Boolean} document_rf
 */
GetSellerDto.prototype['document_rf'] = undefined;

/**
 * @member {String} state_registration
 */
GetSellerDto.prototype['state_registration'] = undefined;

/**
 * @member {String} cns
 */
GetSellerDto.prototype['cns'] = undefined;

/**
 * @member {String} cnae
 */
GetSellerDto.prototype['cnae'] = undefined;

/**
 * @member {String} code
 */
GetSellerDto.prototype['code'] = undefined;

/**
 * @member {module:model/GetSellerDto.AssignmentEnum} assignment
 */
GetSellerDto.prototype['assignment'] = undefined;

/**
 * @member {String} created_at
 */
GetSellerDto.prototype['created_at'] = undefined;

/**
 * @member {Array.<String>} absorb_costs
 */
GetSellerDto.prototype['absorb_costs'] = undefined;

/**
 * @member {module:model/GetSellerDto.SettlementTypeEnum} settlement_type
 */
GetSellerDto.prototype['settlement_type'] = undefined;

/**
 * @member {Array.<module:model/GetAcquirerDto>} acquirers
 */
GetSellerDto.prototype['acquirers'] = undefined;

/**
 * @member {module:model/GetAddressDto} address
 */
GetSellerDto.prototype['address'] = undefined;

/**
 * @member {module:model/GetBankAccountDto} bank_account
 */
GetSellerDto.prototype['bank_account'] = undefined;

/**
 * @member {Number} monthly_billing
 */
GetSellerDto.prototype['monthly_billing'] = undefined;

/**
 * @member {String} covenant
 */
GetSellerDto.prototype['covenant'] = undefined;

/**
 * @member {Boolean} is_split
 */
GetSellerDto.prototype['is_split'] = undefined;

/**
 * @member {String} phone
 */
GetSellerDto.prototype['phone'] = undefined;

/**
 * @member {String} secondary_phone
 */
GetSellerDto.prototype['secondary_phone'] = undefined;

/**
 * @member {String} tertiary_phone
 */
GetSellerDto.prototype['tertiary_phone'] = undefined;

/**
 * @member {module:model/GetSellerDto.StatusEnum} status
 */
GetSellerDto.prototype['status'] = undefined;

/**
 * @member {module:model/GetSellerDto.TypeEnum} type
 */
GetSellerDto.prototype['type'] = undefined;

/**
 * @member {module:model/GetMerchantDto} merchant
 */
GetSellerDto.prototype['merchant'] = undefined;

/**
 * @member {module:model/GetSellerSalePlanDto} sale_plan
 */
GetSellerDto.prototype['sale_plan'] = undefined;

/**
 * @member {String} sale_plan_id
 */
GetSellerDto.prototype['sale_plan_id'] = undefined;

/**
 * @member {String} accounting_account_settlement_id
 */
GetSellerDto.prototype['accounting_account_settlement_id'] = undefined;

/**
 * @member {Number} totalBatch
 */
GetSellerDto.prototype['totalBatch'] = undefined;

/**
 * @member {Number} latestSettlement
 */
GetSellerDto.prototype['latestSettlement'] = undefined;

/**
 * @member {Boolean} pix_pos
 */
GetSellerDto.prototype['pix_pos'] = undefined;

/**
 * @member {module:model/GetSellerDto.BilletProviderEnum} billet_provider
 */
GetSellerDto.prototype['billet_provider'] = undefined;

/**
 * @member {Boolean} is_assignor
 */
GetSellerDto.prototype['is_assignor'] = undefined;

/**
 * @member {Array.<String>} no_payment_methods
 */
GetSellerDto.prototype['no_payment_methods'] = undefined;

/**
 * @member {module:model/GetLogoDto} logo
 */
GetSellerDto.prototype['logo'] = undefined;

/**
 * @member {module:model/GetThemeDto} theme
 */
GetSellerDto.prototype['theme'] = undefined;

/**
 * @member {Boolean} has_split_rules
 */
GetSellerDto.prototype['has_split_rules'] = undefined;

/**
 * @member {Boolean} confirmation_payment_limit
 */
GetSellerDto.prototype['confirmation_payment_limit'] = undefined;

/**
 * @member {Number} confirmation_payment_limit_days
 */
GetSellerDto.prototype['confirmation_payment_limit_days'] = undefined;

/**
 * @member {module:model/ProtocolCustomizations} protocol_customizations
 */
GetSellerDto.prototype['protocol_customizations'] = undefined;

/**
 * @member {module:model/GetSellerDto.PixProviderEnum} pix_provider
 */
GetSellerDto.prototype['pix_provider'] = undefined;

/**
 * @member {String} email
 */
GetSellerDto.prototype['email'] = undefined;

/**
 * @member {String} secondary_email
 */
GetSellerDto.prototype['secondary_email'] = undefined;

/**
 * @member {String} tertiary_email
 */
GetSellerDto.prototype['tertiary_email'] = undefined;

/**
 * @member {module:model/SellerEmails} custom_emails
 */
GetSellerDto.prototype['custom_emails'] = undefined;

/**
 * @member {Boolean} no_spreading_pix
 */
GetSellerDto.prototype['no_spreading_pix'] = undefined;

/**
 * @member {Array.<module:model/Responsible>} responsibles
 */
GetSellerDto.prototype['responsibles'] = undefined;

/**
 * @member {String} owner_name
 */
GetSellerDto.prototype['owner_name'] = undefined;

/**
 * @member {String} owner_document
 */
GetSellerDto.prototype['owner_document'] = undefined;

/**
 * @member {Boolean} owner_document_ofac
 */
GetSellerDto.prototype['owner_document_ofac'] = undefined;

/**
 * @member {Boolean} owner_document_onu
 */
GetSellerDto.prototype['owner_document_onu'] = undefined;

/**
 * @member {Boolean} owner_document_pep
 */
GetSellerDto.prototype['owner_document_pep'] = undefined;

/**
 * @member {Boolean} owner_document_ref
 */
GetSellerDto.prototype['owner_document_ref'] = undefined;

/**
 * @member {String} owner_birth
 */
GetSellerDto.prototype['owner_birth'] = undefined;

/**
 * @member {Boolean} frontier
 */
GetSellerDto.prototype['frontier'] = undefined;

/**
 * @member {String} erp
 */
GetSellerDto.prototype['erp'] = undefined;

/**
 * @member {Boolean} three_ds_active
 */
GetSellerDto.prototype['three_ds_active'] = undefined;

/**
 * @member {Number} min_three_ds
 */
GetSellerDto.prototype['min_three_ds'] = undefined;

/**
 * @member {Number} three_ds_value
 */
GetSellerDto.prototype['three_ds_value'] = undefined;

/**
 * @member {Boolean} risk_active
 */
GetSellerDto.prototype['risk_active'] = undefined;

/**
 * @member {Number} min_risk
 */
GetSellerDto.prototype['min_risk'] = undefined;

/**
 * @member {Number} risk_value
 */
GetSellerDto.prototype['risk_value'] = undefined;

/**
 * @member {Boolean} billet_code
 */
GetSellerDto.prototype['billet_code'] = undefined;

/**
 * @member {Boolean} card_payer_check
 */
GetSellerDto.prototype['card_payer_check'] = undefined;

/**
 * @member {Number} card_payer_check_min_value
 */
GetSellerDto.prototype['card_payer_check_min_value'] = undefined;

/**
 * @member {String} extract_name
 */
GetSellerDto.prototype['extract_name'] = undefined;

/**
 * @member {module:model/GetSellerDto.AccreditationStatusEnum} accreditation_status
 */
GetSellerDto.prototype['accreditation_status'] = undefined;

/**
 * @member {Number} celcoin_value
 */
GetSellerDto.prototype['celcoin_value'] = undefined;

/**
 * @member {module:model/GetSellerDto.CelcoinFeeTypeEnum} celcoin_fee_type
 */
GetSellerDto.prototype['celcoin_fee_type'] = undefined;





/**
 * Allowed values for the <code>assignment</code> property.
 * @enum {String}
 * @readonly
 */
GetSellerDto['AssignmentEnum'] = {

    /**
     * value: "legal_entity"
     * @const
     */
    "legal_entity": "legal_entity",

    /**
     * value: "civil"
     * @const
     */
    "civil": "civil",

    /**
     * value: "protest"
     * @const
     */
    "protest": "protest",

    /**
     * value: "note"
     * @const
     */
    "note": "note",

    /**
     * value: "properties"
     * @const
     */
    "properties": "properties"
};


/**
 * Allowed values for the <code>settlement_type</code> property.
 * @enum {String}
 * @readonly
 */
GetSellerDto['SettlementTypeEnum'] = {

    /**
     * value: "PIX"
     * @const
     */
    "PIX": "PIX",

    /**
     * value: "TED"
     * @const
     */
    "TED": "TED"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
GetSellerDto['StatusEnum'] = {

    /**
     * value: "activated"
     * @const
     */
    "activated": "activated",

    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive",

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "activation_sent"
     * @const
     */
    "activation_sent": "activation_sent"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GetSellerDto['TypeEnum'] = {

    /**
     * value: "transaction"
     * @const
     */
    "transaction": "transaction",

    /**
     * value: "registry"
     * @const
     */
    "registry": "registry",

    /**
     * value: "group"
     * @const
     */
    "group": "group",

    /**
     * value: "restricted_seller"
     * @const
     */
    "restricted_seller": "restricted_seller"
};


/**
 * Allowed values for the <code>billet_provider</code> property.
 * @enum {String}
 * @readonly
 */
GetSellerDto['BilletProviderEnum'] = {

    /**
     * value: "adyen"
     * @const
     */
    "adyen": "adyen",

    /**
     * value: "bradesco"
     * @const
     */
    "bradesco": "bradesco",

    /**
     * value: "itau"
     * @const
     */
    "itau": "itau"
};


/**
 * Allowed values for the <code>pix_provider</code> property.
 * @enum {String}
 * @readonly
 */
GetSellerDto['PixProviderEnum'] = {

    /**
     * value: "adyen"
     * @const
     */
    "adyen": "adyen",

    /**
     * value: "bradesco"
     * @const
     */
    "bradesco": "bradesco",

    /**
     * value: "itau"
     * @const
     */
    "itau": "itau"
};


/**
 * Allowed values for the <code>accreditation_status</code> property.
 * @enum {String}
 * @readonly
 */
GetSellerDto['AccreditationStatusEnum'] = {

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "active_and_ownership_change"
     * @const
     */
    "active_and_ownership_change": "active_and_ownership_change",

    /**
     * value: "cancelled"
     * @const
     */
    "cancelled": "cancelled",

    /**
     * value: "inactive_by_ownership_change"
     * @const
     */
    "inactive_by_ownership_change": "inactive_by_ownership_change"
};


/**
 * Allowed values for the <code>celcoin_fee_type</code> property.
 * @enum {String}
 * @readonly
 */
GetSellerDto['CelcoinFeeTypeEnum'] = {

    /**
     * value: "percentage"
     * @const
     */
    "percentage": "percentage",

    /**
     * value: "real"
     * @const
     */
    "real": "real"
};



export default GetSellerDto;

