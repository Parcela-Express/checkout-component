/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Logo from './Logo';
import Payer from './Payer';
import Sale from './Sale';
import Seller from './Seller';
import Theme from './Theme';
import User from './User';

/**
 * The PaymentLink model module.
 * @module model/PaymentLink
 * @version 1.0
 */
class PaymentLink {
    /**
     * Constructs a new <code>PaymentLink</code>.
     * @alias module:model/PaymentLink
     * @param amount {Number} 
     * @param description {String} 
     * @param url {String} 
     * @param token {String} 
     * @param payer {module:model/Payer} 
     * @param payer_document {String} 
     * @param status {module:model/PaymentLink.StatusEnum} 
     * @param generated_by_payer {Boolean} 
     * @param sale {module:model/Sale} 
     * @param seller {module:model/Seller} 
     * @param created_at {String} 
     * @param expires_in {String} 
     */
    constructor(amount, description, url, token, payer, payer_document, status, generated_by_payer, sale, seller, created_at, expires_in) { 
        
        PaymentLink.initialize(this, amount, description, url, token, payer, payer_document, status, generated_by_payer, sale, seller, created_at, expires_in);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, amount, description, url, token, payer, payer_document, status, generated_by_payer, sale, seller, created_at, expires_in) { 
        obj['amount'] = amount;
        obj['description'] = description;
        obj['url'] = url;
        obj['token'] = token;
        obj['payer'] = payer;
        obj['payer_document'] = payer_document;
        obj['status'] = status;
        obj['generated_by_payer'] = generated_by_payer;
        obj['sale'] = sale;
        obj['seller'] = seller;
        obj['created_at'] = created_at;
        obj['expires_in'] = expires_in;
    }

    /**
     * Constructs a <code>PaymentLink</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaymentLink} obj Optional instance to populate.
     * @return {module:model/PaymentLink} The populated <code>PaymentLink</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaymentLink();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('payer')) {
                obj['payer'] = Payer.constructFromObject(data['payer']);
            }
            if (data.hasOwnProperty('payer_id')) {
                obj['payer_id'] = ApiClient.convertToType(data['payer_id'], 'String');
            }
            if (data.hasOwnProperty('payer_name')) {
                obj['payer_name'] = ApiClient.convertToType(data['payer_name'], 'String');
            }
            if (data.hasOwnProperty('payer_document')) {
                obj['payer_document'] = ApiClient.convertToType(data['payer_document'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = User.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('generated_by_payer')) {
                obj['generated_by_payer'] = ApiClient.convertToType(data['generated_by_payer'], 'Boolean');
            }
            if (data.hasOwnProperty('sale')) {
                obj['sale'] = Sale.constructFromObject(data['sale']);
            }
            if (data.hasOwnProperty('sale_id')) {
                obj['sale_id'] = ApiClient.convertToType(data['sale_id'], 'String');
            }
            if (data.hasOwnProperty('sale_form_payment')) {
                obj['sale_form_payment'] = ApiClient.convertToType(data['sale_form_payment'], 'String');
            }
            if (data.hasOwnProperty('seller')) {
                obj['seller'] = Seller.constructFromObject(data['seller']);
            }
            if (data.hasOwnProperty('seller_id')) {
                obj['seller_id'] = ApiClient.convertToType(data['seller_id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('created_at_time')) {
                obj['created_at_time'] = ApiClient.convertToType(data['created_at_time'], 'Number');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('updated_at_time')) {
                obj['updated_at_time'] = ApiClient.convertToType(data['updated_at_time'], 'Number');
            }
            if (data.hasOwnProperty('expires_in')) {
                obj['expires_in'] = ApiClient.convertToType(data['expires_in'], 'String');
            }
            if (data.hasOwnProperty('expires_in_time')) {
                obj['expires_in_time'] = ApiClient.convertToType(data['expires_in_time'], 'Number');
            }
            if (data.hasOwnProperty('billet_payment_is_permitted')) {
                obj['billet_payment_is_permitted'] = ApiClient.convertToType(data['billet_payment_is_permitted'], 'Boolean');
            }
            if (data.hasOwnProperty('qrcode_payment_is_permitted')) {
                obj['qrcode_payment_is_permitted'] = ApiClient.convertToType(data['qrcode_payment_is_permitted'], 'Boolean');
            }
            if (data.hasOwnProperty('card_payment_is_permitted')) {
                obj['card_payment_is_permitted'] = ApiClient.convertToType(data['card_payment_is_permitted'], 'Boolean');
            }
            if (data.hasOwnProperty('qrcode_url')) {
                obj['qrcode_url'] = ApiClient.convertToType(data['qrcode_url'], 'String');
            }
            if (data.hasOwnProperty('payment_methods')) {
                obj['payment_methods'] = ApiClient.convertToType(data['payment_methods'], ['String']);
            }
            if (data.hasOwnProperty('pre_capture')) {
                obj['pre_capture'] = ApiClient.convertToType(data['pre_capture'], 'Boolean');
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = Logo.constructFromObject(data['logo']);
            }
            if (data.hasOwnProperty('logo_id')) {
                obj['logo_id'] = ApiClient.convertToType(data['logo_id'], 'String');
            }
            if (data.hasOwnProperty('theme')) {
                obj['theme'] = Theme.constructFromObject(data['theme']);
            }
            if (data.hasOwnProperty('theme_id')) {
                obj['theme_id'] = ApiClient.convertToType(data['theme_id'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], 'String');
            }
            if (data.hasOwnProperty('note')) {
                obj['note'] = ApiClient.convertToType(data['note'], 'String');
            }
            if (data.hasOwnProperty('service_value')) {
                obj['service_value'] = ApiClient.convertToType(data['service_value'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
PaymentLink.prototype['id'] = undefined;

/**
 * @member {Number} amount
 */
PaymentLink.prototype['amount'] = undefined;

/**
 * @member {String} description
 */
PaymentLink.prototype['description'] = undefined;

/**
 * @member {String} url
 */
PaymentLink.prototype['url'] = undefined;

/**
 * @member {String} token
 */
PaymentLink.prototype['token'] = undefined;

/**
 * @member {String} email
 */
PaymentLink.prototype['email'] = undefined;

/**
 * @member {String} phone
 */
PaymentLink.prototype['phone'] = undefined;

/**
 * @member {module:model/Payer} payer
 */
PaymentLink.prototype['payer'] = undefined;

/**
 * @member {String} payer_id
 */
PaymentLink.prototype['payer_id'] = undefined;

/**
 * @member {String} payer_name
 */
PaymentLink.prototype['payer_name'] = undefined;

/**
 * @member {String} payer_document
 */
PaymentLink.prototype['payer_document'] = undefined;

/**
 * @member {module:model/User} user
 */
PaymentLink.prototype['user'] = undefined;

/**
 * @member {String} user_id
 */
PaymentLink.prototype['user_id'] = undefined;

/**
 * @member {module:model/PaymentLink.StatusEnum} status
 */
PaymentLink.prototype['status'] = undefined;

/**
 * @member {Boolean} generated_by_payer
 */
PaymentLink.prototype['generated_by_payer'] = undefined;

/**
 * @member {module:model/Sale} sale
 */
PaymentLink.prototype['sale'] = undefined;

/**
 * @member {String} sale_id
 */
PaymentLink.prototype['sale_id'] = undefined;

/**
 * @member {module:model/PaymentLink.SaleFormPaymentEnum} sale_form_payment
 */
PaymentLink.prototype['sale_form_payment'] = undefined;

/**
 * @member {module:model/Seller} seller
 */
PaymentLink.prototype['seller'] = undefined;

/**
 * @member {String} seller_id
 */
PaymentLink.prototype['seller_id'] = undefined;

/**
 * @member {String} created_at
 */
PaymentLink.prototype['created_at'] = undefined;

/**
 * @member {Number} created_at_time
 */
PaymentLink.prototype['created_at_time'] = undefined;

/**
 * @member {String} updated_at
 */
PaymentLink.prototype['updated_at'] = undefined;

/**
 * @member {Number} updated_at_time
 */
PaymentLink.prototype['updated_at_time'] = undefined;

/**
 * @member {String} expires_in
 */
PaymentLink.prototype['expires_in'] = undefined;

/**
 * @member {Number} expires_in_time
 */
PaymentLink.prototype['expires_in_time'] = undefined;

/**
 * @member {Boolean} billet_payment_is_permitted
 */
PaymentLink.prototype['billet_payment_is_permitted'] = undefined;

/**
 * @member {Boolean} qrcode_payment_is_permitted
 */
PaymentLink.prototype['qrcode_payment_is_permitted'] = undefined;

/**
 * @member {Boolean} card_payment_is_permitted
 */
PaymentLink.prototype['card_payment_is_permitted'] = undefined;

/**
 * @member {String} qrcode_url
 */
PaymentLink.prototype['qrcode_url'] = undefined;

/**
 * @member {Array.<module:model/PaymentLink.PaymentMethodsEnum>} payment_methods
 */
PaymentLink.prototype['payment_methods'] = undefined;

/**
 * @member {Boolean} pre_capture
 */
PaymentLink.prototype['pre_capture'] = undefined;

/**
 * @member {module:model/Logo} logo
 */
PaymentLink.prototype['logo'] = undefined;

/**
 * @member {String} logo_id
 */
PaymentLink.prototype['logo_id'] = undefined;

/**
 * @member {module:model/Theme} theme
 */
PaymentLink.prototype['theme'] = undefined;

/**
 * @member {String} theme_id
 */
PaymentLink.prototype['theme_id'] = undefined;

/**
 * @member {String} metadata
 */
PaymentLink.prototype['metadata'] = undefined;

/**
 * @member {String} note
 */
PaymentLink.prototype['note'] = undefined;

/**
 * @member {Number} service_value
 */
PaymentLink.prototype['service_value'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
PaymentLink['StatusEnum'] = {

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "pending_capture"
     * @const
     */
    "pending_capture": "pending_capture",

    /**
     * value: "expired"
     * @const
     */
    "expired": "expired",

    /**
     * value: "canceled"
     * @const
     */
    "canceled": "canceled",

    /**
     * value: "paid"
     * @const
     */
    "paid": "paid"
};


/**
 * Allowed values for the <code>sale_form_payment</code> property.
 * @enum {String}
 * @readonly
 */
PaymentLink['SaleFormPaymentEnum'] = {

    /**
     * value: "credit"
     * @const
     */
    "credit": "credit",

    /**
     * value: "debit"
     * @const
     */
    "debit": "debit",

    /**
     * value: "billet"
     * @const
     */
    "billet": "billet",

    /**
     * value: "pix"
     * @const
     */
    "pix": "pix",

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "pix_pos"
     * @const
     */
    "pix_pos": "pix_pos"
};


/**
 * Allowed values for the <code>payment_methods</code> property.
 * @enum {String}
 * @readonly
 */
PaymentLink['PaymentMethodsEnum'] = {

    /**
     * value: "card"
     * @const
     */
    "card": "card",

    /**
     * value: "billet"
     * @const
     */
    "billet": "billet",

    /**
     * value: "pix"
     * @const
     */
    "pix": "pix"
};



export default PaymentLink;

