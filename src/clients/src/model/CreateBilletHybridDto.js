/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateSplitRulesDto from './CreateSplitRulesDto';
import ShopperDTO from './ShopperDTO';

/**
 * The CreateBilletHybridDto model module.
 * @module model/CreateBilletHybridDto
 * @version 1.0
 */
class CreateBilletHybridDto {
    /**
     * Constructs a new <code>CreateBilletHybridDto</code>.
     * @alias module:model/CreateBilletHybridDto
     * @param value {Number} Valor
     * @param social_security_number {String} CPF ou CNPJ
     * @param shopper_statement {String} Descrição do boleto
     * @param description {String} Descrição
     * @param delivery_date {Date} Data de vencimento
     * @param shopper {module:model/ShopperDTO} Dados do cliente
     */
    constructor(value, social_security_number, shopper_statement, description, delivery_date, shopper) { 
        
        CreateBilletHybridDto.initialize(this, value, social_security_number, shopper_statement, description, delivery_date, shopper);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, value, social_security_number, shopper_statement, description, delivery_date, shopper) { 
        obj['value'] = value;
        obj['social_security_number'] = social_security_number;
        obj['shopper_statement'] = shopper_statement;
        obj['description'] = description;
        obj['delivery_date'] = delivery_date;
        obj['shopper'] = shopper;
    }

    /**
     * Constructs a <code>CreateBilletHybridDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateBilletHybridDto} obj Optional instance to populate.
     * @return {module:model/CreateBilletHybridDto} The populated <code>CreateBilletHybridDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateBilletHybridDto();

            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
            if (data.hasOwnProperty('social_security_number')) {
                obj['social_security_number'] = ApiClient.convertToType(data['social_security_number'], 'String');
            }
            if (data.hasOwnProperty('shopper_statement')) {
                obj['shopper_statement'] = ApiClient.convertToType(data['shopper_statement'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('delivery_date')) {
                obj['delivery_date'] = ApiClient.convertToType(data['delivery_date'], 'Date');
            }
            if (data.hasOwnProperty('shopper')) {
                obj['shopper'] = ApiClient.convertToType(data['shopper'], ShopperDTO);
            }
            if (data.hasOwnProperty('has_split_rules')) {
                obj['has_split_rules'] = ApiClient.convertToType(data['has_split_rules'], 'Boolean');
            }
            if (data.hasOwnProperty('split_rules')) {
                obj['split_rules'] = ApiClient.convertToType(data['split_rules'], [CreateSplitRulesDto]);
            }
            if (data.hasOwnProperty('confirmation_required')) {
                obj['confirmation_required'] = ApiClient.convertToType(data['confirmation_required'], 'Boolean');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
            if (data.hasOwnProperty('instructions')) {
                obj['instructions'] = ApiClient.convertToType(data['instructions'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
        }
        return obj;
    }


}

/**
 * Valor
 * @member {Number} value
 */
CreateBilletHybridDto.prototype['value'] = undefined;

/**
 * CPF ou CNPJ
 * @member {String} social_security_number
 */
CreateBilletHybridDto.prototype['social_security_number'] = undefined;

/**
 * Descrição do boleto
 * @member {String} shopper_statement
 */
CreateBilletHybridDto.prototype['shopper_statement'] = undefined;

/**
 * Descrição
 * @member {String} description
 */
CreateBilletHybridDto.prototype['description'] = undefined;

/**
 * Data de vencimento
 * @member {Date} delivery_date
 */
CreateBilletHybridDto.prototype['delivery_date'] = undefined;

/**
 * Dados do cliente
 * @member {module:model/ShopperDTO} shopper
 */
CreateBilletHybridDto.prototype['shopper'] = undefined;

/**
 * Há divisão de pagamento
 * @member {Boolean} has_split_rules
 */
CreateBilletHybridDto.prototype['has_split_rules'] = undefined;

/**
 * Divisão de pagamento
 * @member {Array.<module:model/CreateSplitRulesDto>} split_rules
 */
CreateBilletHybridDto.prototype['split_rules'] = undefined;

/**
 * Há confirmação de pagamento
 * @member {Boolean} confirmation_required
 */
CreateBilletHybridDto.prototype['confirmation_required'] = undefined;

/**
 * Número do protocolo
 * @member {String} protocol
 */
CreateBilletHybridDto.prototype['protocol'] = undefined;

/**
 * Instruções para o boleto(caso vazio será usado o campo description)
 * @member {String} instructions
 */
CreateBilletHybridDto.prototype['instructions'] = undefined;

/**
 * @member {Object} metadata
 */
CreateBilletHybridDto.prototype['metadata'] = undefined;






export default CreateBilletHybridDto;

