/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateFileExportRequestDto from '../model/CreateFileExportRequestDto';
import CreateSellerFileExportRequestDto from '../model/CreateSellerFileExportRequestDto';
import GetFileExportRequestDto from '../model/GetFileExportRequestDto';
import PaginatedDto from '../model/PaginatedDto';

/**
* FileExportRequests service.
* @module api/FileExportRequestsApi
* @version 1.0
*/
export default class FileExportRequestsApi {

    /**
    * Constructs a new FileExportRequestsApi. 
    * @alias module:api/FileExportRequestsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createFileExportRequest operation.
     * @callback module:api/FileExportRequestsApi~createFileExportRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetFileExportRequestDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gerar uma requisição de exportação de arquivo
     * Em alternativa a esta rota, utilize a v2.
     * @param {module:model/CreateFileExportRequestDto} CreateFileExportRequestDto 
     * @param {module:api/FileExportRequestsApi~createFileExportRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetFileExportRequestDto}
     */
    createFileExportRequest(CreateFileExportRequestDto, callback) {
      let postBody = CreateFileExportRequestDto;
      // verify the required parameter 'CreateFileExportRequestDto' is set
      if (CreateFileExportRequestDto === undefined || CreateFileExportRequestDto === null) {
        throw new Error("Missing the required parameter 'CreateFileExportRequestDto' when calling createFileExportRequest");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetFileExportRequestDto;
      return this.apiClient.callApi(
        '/v1/file-exports/requests', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createFileExportRequestV2 operation.
     * @callback module:api/FileExportRequestsApi~createFileExportRequestV2Callback
     * @param {String} error Error message, if any.
     * @param {module:model/GetFileExportRequestDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gerar uma requisição de exportação de arquivo
     * @param {String} sellerId 
     * @param {module:model/CreateSellerFileExportRequestDto} CreateSellerFileExportRequestDto 
     * @param {module:api/FileExportRequestsApi~createFileExportRequestV2Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetFileExportRequestDto}
     */
    createFileExportRequestV2(sellerId, CreateSellerFileExportRequestDto, callback) {
      let postBody = CreateSellerFileExportRequestDto;
      // verify the required parameter 'sellerId' is set
      if (sellerId === undefined || sellerId === null) {
        throw new Error("Missing the required parameter 'sellerId' when calling createFileExportRequestV2");
      }
      // verify the required parameter 'CreateSellerFileExportRequestDto' is set
      if (CreateSellerFileExportRequestDto === undefined || CreateSellerFileExportRequestDto === null) {
        throw new Error("Missing the required parameter 'CreateSellerFileExportRequestDto' when calling createFileExportRequestV2");
      }

      let pathParams = {
        'sellerId': sellerId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetFileExportRequestDto;
      return this.apiClient.callApi(
        '/v2/file-exports/requests/seller/{sellerId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listFileExportRequests operation.
     * @callback module:api/FileExportRequestsApi~listFileExportRequestsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Listar requisições de exportação de arquivos
     * @param {Number} limit 
     * @param {Number} current_page 
     * @param {Object} opts Optional parameters
     * @param {String} opts.startDate Formato: yyyy-mm-dd
     * @param {String} opts.endDate Formato: yyyy-mm-dd
     * @param {Array.<module:model/String>} opts.status 
     * @param {Array.<module:model/String>} opts.type 
     * @param {String} opts.user 
     * @param {String} opts.sellerId 
     * @param {module:model/String} opts.sort  (default to 'time-descending')
     * @param {module:api/FileExportRequestsApi~listFileExportRequestsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedDto}
     */
    listFileExportRequests(limit, current_page, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'limit' is set
      if (limit === undefined || limit === null) {
        throw new Error("Missing the required parameter 'limit' when calling listFileExportRequests");
      }
      // verify the required parameter 'current_page' is set
      if (current_page === undefined || current_page === null) {
        throw new Error("Missing the required parameter 'current_page' when calling listFileExportRequests");
      }

      let pathParams = {
      };
      let queryParams = {
        'startDate': opts['startDate'],
        'endDate': opts['endDate'],
        'status': this.apiClient.buildCollectionParam(opts['status'], 'multi'),
        'type': this.apiClient.buildCollectionParam(opts['type'], 'multi'),
        'user': opts['user'],
        'sellerId': opts['sellerId'],
        'limit': limit,
        'current_page': current_page,
        'sort': opts['sort']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedDto;
      return this.apiClient.callApi(
        '/v1/file-exports/requests', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
