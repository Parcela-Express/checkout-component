/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Celcoin model module.
 * @module model/Celcoin
 * @version 1.0
 */
class Celcoin {
    /**
     * Constructs a new <code>Celcoin</code>.
     * @alias module:model/Celcoin
     * @param transaction_id {String} 
     * @param assignor {String} 
     * @param digitable {String} 
     * @param created_at {String} 
     * @param value {Number} 
     * @param original_value {Number} 
     * @param due_date {String} 
     */
    constructor(transaction_id, assignor, digitable, created_at, value, original_value, due_date) { 
        
        Celcoin.initialize(this, transaction_id, assignor, digitable, created_at, value, original_value, due_date);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, transaction_id, assignor, digitable, created_at, value, original_value, due_date) { 
        obj['transaction_id'] = transaction_id;
        obj['assignor'] = assignor;
        obj['digitable'] = digitable;
        obj['created_at'] = created_at;
        obj['value'] = value;
        obj['original_value'] = original_value;
        obj['due_date'] = due_date;
    }

    /**
     * Constructs a <code>Celcoin</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Celcoin} obj Optional instance to populate.
     * @return {module:model/Celcoin} The populated <code>Celcoin</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Celcoin();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('transaction_id')) {
                obj['transaction_id'] = ApiClient.convertToType(data['transaction_id'], 'String');
            }
            if (data.hasOwnProperty('sale_id')) {
                obj['sale_id'] = ApiClient.convertToType(data['sale_id'], 'String');
            }
            if (data.hasOwnProperty('assignor')) {
                obj['assignor'] = ApiClient.convertToType(data['assignor'], 'String');
            }
            if (data.hasOwnProperty('payer_id')) {
                obj['payer_id'] = ApiClient.convertToType(data['payer_id'], 'String');
            }
            if (data.hasOwnProperty('digitable')) {
                obj['digitable'] = ApiClient.convertToType(data['digitable'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('external_terminal')) {
                obj['external_terminal'] = ApiClient.convertToType(data['external_terminal'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
            if (data.hasOwnProperty('original_value')) {
                obj['original_value'] = ApiClient.convertToType(data['original_value'], 'Number');
            }
            if (data.hasOwnProperty('document_payer')) {
                obj['document_payer'] = ApiClient.convertToType(data['document_payer'], 'String');
            }
            if (data.hasOwnProperty('due_date')) {
                obj['due_date'] = ApiClient.convertToType(data['due_date'], 'String');
            }
            if (data.hasOwnProperty('recipient_name')) {
                obj['recipient_name'] = ApiClient.convertToType(data['recipient_name'], 'String');
            }
            if (data.hasOwnProperty('recipient_document')) {
                obj['recipient_document'] = ApiClient.convertToType(data['recipient_document'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Celcoin.prototype['id'] = undefined;

/**
 * @member {String} transaction_id
 */
Celcoin.prototype['transaction_id'] = undefined;

/**
 * @member {String} sale_id
 */
Celcoin.prototype['sale_id'] = undefined;

/**
 * @member {String} assignor
 */
Celcoin.prototype['assignor'] = undefined;

/**
 * @member {String} payer_id
 */
Celcoin.prototype['payer_id'] = undefined;

/**
 * @member {String} digitable
 */
Celcoin.prototype['digitable'] = undefined;

/**
 * @member {String} created_at
 */
Celcoin.prototype['created_at'] = undefined;

/**
 * @member {String} updated_at
 */
Celcoin.prototype['updated_at'] = undefined;

/**
 * @member {String} external_terminal
 */
Celcoin.prototype['external_terminal'] = undefined;

/**
 * @member {Number} value
 */
Celcoin.prototype['value'] = undefined;

/**
 * @member {Number} original_value
 */
Celcoin.prototype['original_value'] = undefined;

/**
 * @member {String} document_payer
 */
Celcoin.prototype['document_payer'] = undefined;

/**
 * @member {String} due_date
 */
Celcoin.prototype['due_date'] = undefined;

/**
 * @member {String} recipient_name
 */
Celcoin.prototype['recipient_name'] = undefined;

/**
 * @member {String} recipient_document
 */
Celcoin.prototype['recipient_document'] = undefined;

/**
 * @member {Number} type
 */
Celcoin.prototype['type'] = undefined;






export default Celcoin;

