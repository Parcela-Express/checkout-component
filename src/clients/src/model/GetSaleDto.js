/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {GetBilletDto} from './GetBilletDto';
import {GetPaymentLinkDto} from './GetPaymentLinkDto';
import {GetSalePayerAddressDto} from './GetSalePayerAddressDto';
import {GetSalePayerDto} from './GetSalePayerDto';
import {GetSalePlanPaymentTypeDto} from './GetSalePlanPaymentTypeDto';
import {GetSaleSalesPlanDto} from './GetSaleSalesPlanDto';
import {GetSaleSellerDto} from './GetSaleSellerDto';
import {GetSaleUserDto} from './GetSaleUserDto';
import {GetSplitRulesEntity} from './GetSplitRulesEntity';

/**
 * The GetSaleDto model module.
 * @module model/GetSaleDto
 * @version 1.0
 */
export class GetSaleDto {
  /**
   * Constructs a new <code>GetSaleDto</code>.
   * @alias module:model/GetSaleDto
   * @class
   * @param id {String} 
   * @param description {String} 
   * @param protocol {String} 
   * @param createdAt {String} 
   * @param updatedAt {String} 
   * @param originalAmount {Number} 
   * @param amount {Number} 
   * @param type {module:model/GetSaleDto.TypeEnum} 
   * @param formPayment {module:model/GetSaleDto.FormPaymentEnum} 
   * @param status {module:model/GetSaleDto.StatusEnum} 
   * @param seller {module:model/GetSaleSellerDto} 
   * @param salePlan {module:model/GetSaleSalesPlanDto} 
   * @param user {module:model/GetSaleUserDto} 
   * @param paymentType {module:model/GetSalePlanPaymentTypeDto} 
   * @param payer {module:model/GetSalePayerDto} 
   * @param billet {module:model/GetBilletDto} 
   * @param paymentLink {module:model/GetPaymentLinkDto} 
   * @param splitRules {module:model/GetSplitRulesEntity} 
   * @param installments {Number} 
   * @param sellerName {String} 
   * @param sellerDocument {String} 
   * @param paymentTypeCode {String} 
   * @param paymentTypeDescription {String} 
   * @param paymentTypeInstallments {Number} 
   * @param payerName {String} 
   * @param payerEmail {String} 
   * @param payerDocument {String} 
   * @param payerAddress {module:model/GetSalePayerAddressDto} 
   * @param salePlanName {String} 
   * @param createdByUserName {String} 
   * @param createdByUserEmail {String} 
   * @param preCapture {Boolean} 
   * @param orderNumber {Number} 
   * @param metadata {Object} 
   */
  constructor(id, description, protocol, createdAt, updatedAt, originalAmount, amount, type, formPayment, status, seller, salePlan, user, paymentType, payer, billet, paymentLink, splitRules, installments, sellerName, sellerDocument, paymentTypeCode, paymentTypeDescription, paymentTypeInstallments, payerName, payerEmail, payerDocument, payerAddress, salePlanName, createdByUserName, createdByUserEmail, preCapture, orderNumber, metadata) {
    this.id = id;
    this.description = description;
    this.protocol = protocol;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.originalAmount = originalAmount;
    this.amount = amount;
    this.type = type;
    this.formPayment = formPayment;
    this.status = status;
    this.seller = seller;
    this.salePlan = salePlan;
    this.user = user;
    this.paymentType = paymentType;
    this.payer = payer;
    this.billet = billet;
    this.paymentLink = paymentLink;
    this.splitRules = splitRules;
    this.installments = installments;
    this.sellerName = sellerName;
    this.sellerDocument = sellerDocument;
    this.paymentTypeCode = paymentTypeCode;
    this.paymentTypeDescription = paymentTypeDescription;
    this.paymentTypeInstallments = paymentTypeInstallments;
    this.payerName = payerName;
    this.payerEmail = payerEmail;
    this.payerDocument = payerDocument;
    this.payerAddress = payerAddress;
    this.salePlanName = salePlanName;
    this.createdByUserName = createdByUserName;
    this.createdByUserEmail = createdByUserEmail;
    this.preCapture = preCapture;
    this.orderNumber = orderNumber;
    this.metadata = metadata;
  }

  /**
   * Constructs a <code>GetSaleDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetSaleDto} obj Optional instance to populate.
   * @return {module:model/GetSaleDto} The populated <code>GetSaleDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new GetSaleDto();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('protocol'))
        obj.protocol = ApiClient.convertToType(data['protocol'], 'String');
      if (data.hasOwnProperty('created_at'))
        obj.createdAt = ApiClient.convertToType(data['created_at'], 'String');
      if (data.hasOwnProperty('updated_at'))
        obj.updatedAt = ApiClient.convertToType(data['updated_at'], 'String');
      if (data.hasOwnProperty('original_amount'))
        obj.originalAmount = ApiClient.convertToType(data['original_amount'], 'Number');
      if (data.hasOwnProperty('amount'))
        obj.amount = ApiClient.convertToType(data['amount'], 'Number');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('formatted_type'))
        obj.formattedType = ApiClient.convertToType(data['formatted_type'], 'String');
      if (data.hasOwnProperty('form_payment'))
        obj.formPayment = ApiClient.convertToType(data['form_payment'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('settlement_day'))
        obj.settlementDay = ApiClient.convertToType(data['settlement_day'], 'String');
      if (data.hasOwnProperty('settlement_status'))
        obj.settlementStatus = ApiClient.convertToType(data['settlement_status'], 'String');
      if (data.hasOwnProperty('seller'))
        obj.seller = GetSaleSellerDto.constructFromObject(data['seller']);
      if (data.hasOwnProperty('sale_plan'))
        obj.salePlan = GetSaleSalesPlanDto.constructFromObject(data['sale_plan']);
      if (data.hasOwnProperty('user'))
        obj.user = GetSaleUserDto.constructFromObject(data['user']);
      if (data.hasOwnProperty('payment_type'))
        obj.paymentType = GetSalePlanPaymentTypeDto.constructFromObject(data['payment_type']);
      if (data.hasOwnProperty('payer'))
        obj.payer = GetSalePayerDto.constructFromObject(data['payer']);
      if (data.hasOwnProperty('billet'))
        obj.billet = GetBilletDto.constructFromObject(data['billet']);
      if (data.hasOwnProperty('payment_link'))
        obj.paymentLink = GetPaymentLinkDto.constructFromObject(data['payment_link']);
      if (data.hasOwnProperty('split_rules'))
        obj.splitRules = GetSplitRulesEntity.constructFromObject(data['split_rules']);
      if (data.hasOwnProperty('has_split_rules'))
        obj.hasSplitRules = ApiClient.convertToType(data['has_split_rules'], 'Boolean');
      if (data.hasOwnProperty('formatted_description'))
        obj.formattedDescription = ApiClient.convertToType(data['formatted_description'], 'String');
      if (data.hasOwnProperty('installments'))
        obj.installments = ApiClient.convertToType(data['installments'], 'Number');
      if (data.hasOwnProperty('seller_name'))
        obj.sellerName = ApiClient.convertToType(data['seller_name'], 'String');
      if (data.hasOwnProperty('seller_document'))
        obj.sellerDocument = ApiClient.convertToType(data['seller_document'], 'String');
      if (data.hasOwnProperty('payment_type_code'))
        obj.paymentTypeCode = ApiClient.convertToType(data['payment_type_code'], 'String');
      if (data.hasOwnProperty('payment_type_description'))
        obj.paymentTypeDescription = ApiClient.convertToType(data['payment_type_description'], 'String');
      if (data.hasOwnProperty('payment_type_installments'))
        obj.paymentTypeInstallments = ApiClient.convertToType(data['payment_type_installments'], 'Number');
      if (data.hasOwnProperty('payer_name'))
        obj.payerName = ApiClient.convertToType(data['payer_name'], 'String');
      if (data.hasOwnProperty('payer_email'))
        obj.payerEmail = ApiClient.convertToType(data['payer_email'], 'String');
      if (data.hasOwnProperty('payer_document'))
        obj.payerDocument = ApiClient.convertToType(data['payer_document'], 'String');
      if (data.hasOwnProperty('payer_address'))
        obj.payerAddress = GetSalePayerAddressDto.constructFromObject(data['payer_address']);
      if (data.hasOwnProperty('sale_plan_name'))
        obj.salePlanName = ApiClient.convertToType(data['sale_plan_name'], 'String');
      if (data.hasOwnProperty('created_by_user_name'))
        obj.createdByUserName = ApiClient.convertToType(data['created_by_user_name'], 'String');
      if (data.hasOwnProperty('created_by_user_email'))
        obj.createdByUserEmail = ApiClient.convertToType(data['created_by_user_email'], 'String');
      if (data.hasOwnProperty('pre_capture'))
        obj.preCapture = ApiClient.convertToType(data['pre_capture'], 'Boolean');
      if (data.hasOwnProperty('settlement_day_cancellation'))
        obj.settlementDayCancellation = ApiClient.convertToType(data['settlement_day_cancellation'], 'String');
      if (data.hasOwnProperty('settlement_status_cancellation'))
        obj.settlementStatusCancellation = ApiClient.convertToType(data['settlement_status_cancellation'], 'String');
      if (data.hasOwnProperty('payment_day'))
        obj.paymentDay = ApiClient.convertToType(data['payment_day'], 'String');
      if (data.hasOwnProperty('fee'))
        obj.fee = ApiClient.convertToType(data['fee'], 'Number');
      if (data.hasOwnProperty('order_number'))
        obj.orderNumber = ApiClient.convertToType(data['order_number'], 'Number');
      if (data.hasOwnProperty('metadata'))
        obj.metadata = ApiClient.convertToType(data['metadata'], Object);
      if (data.hasOwnProperty('card_number'))
        obj.cardNumber = ApiClient.convertToType(data['card_number'], 'String');
      if (data.hasOwnProperty('card_brand'))
        obj.cardBrand = ApiClient.convertToType(data['card_brand'], 'String');
      if (data.hasOwnProperty('card_holder_name'))
        obj.cardHolderName = ApiClient.convertToType(data['card_holder_name'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} id
 */
GetSaleDto.prototype.id = undefined;

/**
 * @member {String} description
 */
GetSaleDto.prototype.description = undefined;

/**
 * @member {String} protocol
 */
GetSaleDto.prototype.protocol = undefined;

/**
 * @member {String} createdAt
 */
GetSaleDto.prototype.createdAt = undefined;

/**
 * @member {String} updatedAt
 */
GetSaleDto.prototype.updatedAt = undefined;

/**
 * @member {Number} originalAmount
 */
GetSaleDto.prototype.originalAmount = undefined;

/**
 * @member {Number} amount
 */
GetSaleDto.prototype.amount = undefined;

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GetSaleDto.TypeEnum = {
  /**
   * value: "boleto"
   * @const
   */
  boleto: "boleto",

  /**
   * value: "pos"
   * @const
   */
  pos: "pos",

  /**
   * value: "payment_link"
   * @const
   */
  paymentLink: "payment_link",

  /**
   * value: "protest_link"
   * @const
   */
  protestLink: "protest_link",

  /**
   * value: "online"
   * @const
   */
  online: "online",

  /**
   * value: "auto_generate_payment_link"
   * @const
   */
  autoGeneratePaymentLink: "auto_generate_payment_link",

  /**
   * value: "auto_generate_protest_link"
   * @const
   */
  autoGenerateProtestLink: "auto_generate_protest_link"
};
/**
 * @member {module:model/GetSaleDto.TypeEnum} type
 */
GetSaleDto.prototype.type = undefined;

/**
 * @member {String} formattedType
 */
GetSaleDto.prototype.formattedType = undefined;

/**
 * Allowed values for the <code>formPayment</code> property.
 * @enum {String}
 * @readonly
 */
GetSaleDto.FormPaymentEnum = {
  /**
   * value: "credit"
   * @const
   */
  credit: "credit",

  /**
   * value: "debit"
   * @const
   */
  debit: "debit",

  /**
   * value: "billet"
   * @const
   */
  billet: "billet",

  /**
   * value: "pix"
   * @const
   */
  pix: "pix",

  /**
   * value: "pending"
   * @const
   */
  pending: "pending"
};
/**
 * @member {module:model/GetSaleDto.FormPaymentEnum} formPayment
 */
GetSaleDto.prototype.formPayment = undefined;

/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
GetSaleDto.StatusEnum = {
  /**
   * value: "pending"
   * @const
   */
  pending: "pending",

  /**
   * value: "pending_capture"
   * @const
   */
  pendingCapture: "pending_capture",

  /**
   * value: "in_progress_capture"
   * @const
   */
  inProgressCapture: "in_progress_capture",

  /**
   * value: "succeeded"
   * @const
   */
  succeeded: "succeeded",

  /**
   * value: "canceled"
   * @const
   */
  canceled: "canceled",

  /**
   * value: "pending_cancel"
   * @const
   */
  pendingCancel: "pending_cancel",

  /**
   * value: "abort"
   * @const
   */
  abort: "abort",

  /**
   * value: "failed"
   * @const
   */
  failed: "failed"
};
/**
 * @member {module:model/GetSaleDto.StatusEnum} status
 */
GetSaleDto.prototype.status = undefined;

/**
 * @member {String} settlementDay
 */
GetSaleDto.prototype.settlementDay = undefined;

/**
 * @member {String} settlementStatus
 */
GetSaleDto.prototype.settlementStatus = undefined;

/**
 * @member {module:model/GetSaleSellerDto} seller
 */
GetSaleDto.prototype.seller = undefined;

/**
 * @member {module:model/GetSaleSalesPlanDto} salePlan
 */
GetSaleDto.prototype.salePlan = undefined;

/**
 * @member {module:model/GetSaleUserDto} user
 */
GetSaleDto.prototype.user = undefined;

/**
 * @member {module:model/GetSalePlanPaymentTypeDto} paymentType
 */
GetSaleDto.prototype.paymentType = undefined;

/**
 * @member {module:model/GetSalePayerDto} payer
 */
GetSaleDto.prototype.payer = undefined;

/**
 * @member {module:model/GetBilletDto} billet
 */
GetSaleDto.prototype.billet = undefined;

/**
 * @member {module:model/GetPaymentLinkDto} paymentLink
 */
GetSaleDto.prototype.paymentLink = undefined;

/**
 * @member {module:model/GetSplitRulesEntity} splitRules
 */
GetSaleDto.prototype.splitRules = undefined;

/**
 * @member {Boolean} hasSplitRules
 */
GetSaleDto.prototype.hasSplitRules = undefined;

/**
 * @member {String} formattedDescription
 */
GetSaleDto.prototype.formattedDescription = undefined;

/**
 * @member {Number} installments
 */
GetSaleDto.prototype.installments = undefined;

/**
 * @member {String} sellerName
 */
GetSaleDto.prototype.sellerName = undefined;

/**
 * @member {String} sellerDocument
 */
GetSaleDto.prototype.sellerDocument = undefined;

/**
 * @member {String} paymentTypeCode
 */
GetSaleDto.prototype.paymentTypeCode = undefined;

/**
 * @member {String} paymentTypeDescription
 */
GetSaleDto.prototype.paymentTypeDescription = undefined;

/**
 * @member {Number} paymentTypeInstallments
 */
GetSaleDto.prototype.paymentTypeInstallments = undefined;

/**
 * @member {String} payerName
 */
GetSaleDto.prototype.payerName = undefined;

/**
 * @member {String} payerEmail
 */
GetSaleDto.prototype.payerEmail = undefined;

/**
 * @member {String} payerDocument
 */
GetSaleDto.prototype.payerDocument = undefined;

/**
 * @member {module:model/GetSalePayerAddressDto} payerAddress
 */
GetSaleDto.prototype.payerAddress = undefined;

/**
 * @member {String} salePlanName
 */
GetSaleDto.prototype.salePlanName = undefined;

/**
 * @member {String} createdByUserName
 */
GetSaleDto.prototype.createdByUserName = undefined;

/**
 * @member {String} createdByUserEmail
 */
GetSaleDto.prototype.createdByUserEmail = undefined;

/**
 * @member {Boolean} preCapture
 */
GetSaleDto.prototype.preCapture = undefined;

/**
 * @member {String} settlementDayCancellation
 */
GetSaleDto.prototype.settlementDayCancellation = undefined;

/**
 * @member {String} settlementStatusCancellation
 */
GetSaleDto.prototype.settlementStatusCancellation = undefined;

/**
 * @member {String} paymentDay
 */
GetSaleDto.prototype.paymentDay = undefined;

/**
 * @member {Number} fee
 */
GetSaleDto.prototype.fee = undefined;

/**
 * @member {Number} orderNumber
 */
GetSaleDto.prototype.orderNumber = undefined;

/**
 * @member {Object} metadata
 */
GetSaleDto.prototype.metadata = undefined;

/**
 * @member {String} cardNumber
 */
GetSaleDto.prototype.cardNumber = undefined;

/**
 * @member {String} cardBrand
 */
GetSaleDto.prototype.cardBrand = undefined;

/**
 * @member {String} cardHolderName
 */
GetSaleDto.prototype.cardHolderName = undefined;

