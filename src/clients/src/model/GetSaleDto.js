/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Celcoin from './Celcoin';
import GetBilletDto from './GetBilletDto';
import GetPaymentLinkDto from './GetPaymentLinkDto';
import GetSalePayerAddressDto from './GetSalePayerAddressDto';
import GetSalePayerDto from './GetSalePayerDto';
import GetSalePlanPaymentTypeDto from './GetSalePlanPaymentTypeDto';
import GetSaleSalesPlanDto from './GetSaleSalesPlanDto';
import GetSaleSellerDto from './GetSaleSellerDto';
import GetSaleUserDto from './GetSaleUserDto';
import GetSplitRulesDto from './GetSplitRulesDto';
import SettlementBatch from './SettlementBatch';

/**
 * The GetSaleDto model module.
 * @module model/GetSaleDto
 * @version 1.0
 */
class GetSaleDto {
    /**
     * Constructs a new <code>GetSaleDto</code>.
     * @alias module:model/GetSaleDto
     * @param id {String} 
     * @param description {String} 
     * @param protocol {String} 
     * @param created_at {String} 
     * @param updated_at {String} 
     * @param original_amount {Number} 
     * @param amount {Number} 
     * @param type {module:model/GetSaleDto.TypeEnum} 
     * @param form_payment {module:model/GetSaleDto.FormPaymentEnum} 
     * @param status {module:model/GetSaleDto.StatusEnum} 
     * @param seller {module:model/GetSaleSellerDto} 
     * @param sale_plan {module:model/GetSaleSalesPlanDto} 
     * @param user {module:model/GetSaleUserDto} 
     * @param payment_type {module:model/GetSalePlanPaymentTypeDto} 
     * @param payer {module:model/GetSalePayerDto} 
     * @param billet {module:model/GetBilletDto} 
     * @param billet_id {String} 
     * @param payment_link {module:model/GetPaymentLinkDto} 
     * @param split_rules {module:model/GetSplitRulesDto} 
     * @param installments {Number} 
     * @param seller_name {String} 
     * @param seller_document {String} 
     * @param seller_description {String} 
     * @param payment_type_code {String} 
     * @param payment_type_description {String} 
     * @param payment_type_installments {Number} 
     * @param payer_name {String} 
     * @param payer_email {String} 
     * @param payer_document {String} 
     * @param payer_phone {String} 
     * @param payer_address {module:model/GetSalePayerAddressDto} 
     * @param sale_plan_name {String} 
     * @param created_by_user_name {String} 
     * @param created_by_user_email {String} 
     * @param pre_capture {Boolean} 
     * @param order_number {Number} 
     * @param metadata {Object} 
     * @param celcoin {module:model/Celcoin} 
     */
    constructor(id, description, protocol, created_at, updated_at, original_amount, amount, type, form_payment, status, seller, sale_plan, user, payment_type, payer, billet, billet_id, payment_link, split_rules, installments, seller_name, seller_document, seller_description, payment_type_code, payment_type_description, payment_type_installments, payer_name, payer_email, payer_document, payer_phone, payer_address, sale_plan_name, created_by_user_name, created_by_user_email, pre_capture, order_number, metadata, celcoin) { 
        
        GetSaleDto.initialize(this, id, description, protocol, created_at, updated_at, original_amount, amount, type, form_payment, status, seller, sale_plan, user, payment_type, payer, billet, billet_id, payment_link, split_rules, installments, seller_name, seller_document, seller_description, payment_type_code, payment_type_description, payment_type_installments, payer_name, payer_email, payer_document, payer_phone, payer_address, sale_plan_name, created_by_user_name, created_by_user_email, pre_capture, order_number, metadata, celcoin);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, description, protocol, created_at, updated_at, original_amount, amount, type, form_payment, status, seller, sale_plan, user, payment_type, payer, billet, billet_id, payment_link, split_rules, installments, seller_name, seller_document, seller_description, payment_type_code, payment_type_description, payment_type_installments, payer_name, payer_email, payer_document, payer_phone, payer_address, sale_plan_name, created_by_user_name, created_by_user_email, pre_capture, order_number, metadata, celcoin) { 
        obj['id'] = id;
        obj['description'] = description;
        obj['protocol'] = protocol;
        obj['created_at'] = created_at;
        obj['updated_at'] = updated_at;
        obj['original_amount'] = original_amount;
        obj['amount'] = amount;
        obj['type'] = type;
        obj['form_payment'] = form_payment;
        obj['status'] = status;
        obj['seller'] = seller;
        obj['sale_plan'] = sale_plan;
        obj['user'] = user;
        obj['payment_type'] = payment_type;
        obj['payer'] = payer;
        obj['billet'] = billet;
        obj['billet_id'] = billet_id;
        obj['payment_link'] = payment_link;
        obj['split_rules'] = split_rules;
        obj['installments'] = installments;
        obj['seller_name'] = seller_name;
        obj['seller_document'] = seller_document;
        obj['seller_description'] = seller_description;
        obj['payment_type_code'] = payment_type_code;
        obj['payment_type_description'] = payment_type_description;
        obj['payment_type_installments'] = payment_type_installments;
        obj['payer_name'] = payer_name;
        obj['payer_email'] = payer_email;
        obj['payer_document'] = payer_document;
        obj['payer_phone'] = payer_phone;
        obj['payer_address'] = payer_address;
        obj['sale_plan_name'] = sale_plan_name;
        obj['created_by_user_name'] = created_by_user_name;
        obj['created_by_user_email'] = created_by_user_email;
        obj['pre_capture'] = pre_capture;
        obj['order_number'] = order_number;
        obj['metadata'] = metadata;
        obj['celcoin'] = celcoin;
    }

    /**
     * Constructs a <code>GetSaleDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSaleDto} obj Optional instance to populate.
     * @return {module:model/GetSaleDto} The populated <code>GetSaleDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSaleDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('original_amount')) {
                obj['original_amount'] = ApiClient.convertToType(data['original_amount'], 'Number');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('formatted_type')) {
                obj['formatted_type'] = ApiClient.convertToType(data['formatted_type'], 'String');
            }
            if (data.hasOwnProperty('form_payment')) {
                obj['form_payment'] = ApiClient.convertToType(data['form_payment'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('settlement_day')) {
                obj['settlement_day'] = ApiClient.convertToType(data['settlement_day'], 'String');
            }
            if (data.hasOwnProperty('settlement_status')) {
                obj['settlement_status'] = ApiClient.convertToType(data['settlement_status'], 'String');
            }
            if (data.hasOwnProperty('seller')) {
                obj['seller'] = GetSaleSellerDto.constructFromObject(data['seller']);
            }
            if (data.hasOwnProperty('sale_plan')) {
                obj['sale_plan'] = GetSaleSalesPlanDto.constructFromObject(data['sale_plan']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = GetSaleUserDto.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('payment_type')) {
                obj['payment_type'] = GetSalePlanPaymentTypeDto.constructFromObject(data['payment_type']);
            }
            if (data.hasOwnProperty('payer')) {
                obj['payer'] = GetSalePayerDto.constructFromObject(data['payer']);
            }
            if (data.hasOwnProperty('billet')) {
                obj['billet'] = GetBilletDto.constructFromObject(data['billet']);
            }
            if (data.hasOwnProperty('billet_id')) {
                obj['billet_id'] = ApiClient.convertToType(data['billet_id'], 'String');
            }
            if (data.hasOwnProperty('payment_link')) {
                obj['payment_link'] = GetPaymentLinkDto.constructFromObject(data['payment_link']);
            }
            if (data.hasOwnProperty('split_rules')) {
                obj['split_rules'] = GetSplitRulesDto.constructFromObject(data['split_rules']);
            }
            if (data.hasOwnProperty('has_split_rules')) {
                obj['has_split_rules'] = ApiClient.convertToType(data['has_split_rules'], 'Boolean');
            }
            if (data.hasOwnProperty('formatted_description')) {
                obj['formatted_description'] = ApiClient.convertToType(data['formatted_description'], 'String');
            }
            if (data.hasOwnProperty('installments')) {
                obj['installments'] = ApiClient.convertToType(data['installments'], 'Number');
            }
            if (data.hasOwnProperty('seller_name')) {
                obj['seller_name'] = ApiClient.convertToType(data['seller_name'], 'String');
            }
            if (data.hasOwnProperty('seller_document')) {
                obj['seller_document'] = ApiClient.convertToType(data['seller_document'], 'String');
            }
            if (data.hasOwnProperty('seller_description')) {
                obj['seller_description'] = ApiClient.convertToType(data['seller_description'], 'String');
            }
            if (data.hasOwnProperty('payment_type_code')) {
                obj['payment_type_code'] = ApiClient.convertToType(data['payment_type_code'], 'String');
            }
            if (data.hasOwnProperty('payment_type_description')) {
                obj['payment_type_description'] = ApiClient.convertToType(data['payment_type_description'], 'String');
            }
            if (data.hasOwnProperty('payment_type_installments')) {
                obj['payment_type_installments'] = ApiClient.convertToType(data['payment_type_installments'], 'Number');
            }
            if (data.hasOwnProperty('payer_name')) {
                obj['payer_name'] = ApiClient.convertToType(data['payer_name'], 'String');
            }
            if (data.hasOwnProperty('payer_email')) {
                obj['payer_email'] = ApiClient.convertToType(data['payer_email'], 'String');
            }
            if (data.hasOwnProperty('payer_document')) {
                obj['payer_document'] = ApiClient.convertToType(data['payer_document'], 'String');
            }
            if (data.hasOwnProperty('payer_phone')) {
                obj['payer_phone'] = ApiClient.convertToType(data['payer_phone'], 'String');
            }
            if (data.hasOwnProperty('payer_address')) {
                obj['payer_address'] = GetSalePayerAddressDto.constructFromObject(data['payer_address']);
            }
            if (data.hasOwnProperty('sale_plan_name')) {
                obj['sale_plan_name'] = ApiClient.convertToType(data['sale_plan_name'], 'String');
            }
            if (data.hasOwnProperty('created_by_user_name')) {
                obj['created_by_user_name'] = ApiClient.convertToType(data['created_by_user_name'], 'String');
            }
            if (data.hasOwnProperty('created_by_user_email')) {
                obj['created_by_user_email'] = ApiClient.convertToType(data['created_by_user_email'], 'String');
            }
            if (data.hasOwnProperty('pre_capture')) {
                obj['pre_capture'] = ApiClient.convertToType(data['pre_capture'], 'Boolean');
            }
            if (data.hasOwnProperty('settlement_day_cancellation')) {
                obj['settlement_day_cancellation'] = ApiClient.convertToType(data['settlement_day_cancellation'], 'String');
            }
            if (data.hasOwnProperty('settlement_status_cancellation')) {
                obj['settlement_status_cancellation'] = ApiClient.convertToType(data['settlement_status_cancellation'], 'String');
            }
            if (data.hasOwnProperty('settlement_batch_cancellation')) {
                obj['settlement_batch_cancellation'] = SettlementBatch.constructFromObject(data['settlement_batch_cancellation']);
            }
            if (data.hasOwnProperty('payment_day')) {
                obj['payment_day'] = ApiClient.convertToType(data['payment_day'], 'String');
            }
            if (data.hasOwnProperty('fee')) {
                obj['fee'] = ApiClient.convertToType(data['fee'], 'Number');
            }
            if (data.hasOwnProperty('absorb_costs')) {
                obj['absorb_costs'] = ApiClient.convertToType(data['absorb_costs'], ['String']);
            }
            if (data.hasOwnProperty('order_number')) {
                obj['order_number'] = ApiClient.convertToType(data['order_number'], 'Number');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('card_number')) {
                obj['card_number'] = ApiClient.convertToType(data['card_number'], 'String');
            }
            if (data.hasOwnProperty('card_brand')) {
                obj['card_brand'] = ApiClient.convertToType(data['card_brand'], 'String');
            }
            if (data.hasOwnProperty('card_holder_name')) {
                obj['card_holder_name'] = ApiClient.convertToType(data['card_holder_name'], 'String');
            }
            if (data.hasOwnProperty('acquirer_code')) {
                obj['acquirer_code'] = ApiClient.convertToType(data['acquirer_code'], 'String');
            }
            if (data.hasOwnProperty('confirmation_required')) {
                obj['confirmation_required'] = ApiClient.convertToType(data['confirmation_required'], 'Boolean');
            }
            if (data.hasOwnProperty('extract_identification')) {
                obj['extract_identification'] = ApiClient.convertToType(data['extract_identification'], 'String');
            }
            if (data.hasOwnProperty('confirmation_day')) {
                obj['confirmation_day'] = ApiClient.convertToType(data['confirmation_day'], 'String');
            }
            if (data.hasOwnProperty('service_id')) {
                obj['service_id'] = ApiClient.convertToType(data['service_id'], 'String');
            }
            if (data.hasOwnProperty('split_description')) {
                obj['split_description'] = ApiClient.convertToType(data['split_description'], 'String');
            }
            if (data.hasOwnProperty('formatted_split_description')) {
                obj['formatted_split_description'] = ApiClient.convertToType(data['formatted_split_description'], 'String');
            }
            if (data.hasOwnProperty('cnab_id')) {
                obj['cnab_id'] = ApiClient.convertToType(data['cnab_id'], 'String');
            }
            if (data.hasOwnProperty('generate_payer')) {
                obj['generate_payer'] = ApiClient.convertToType(data['generate_payer'], 'Boolean');
            }
            if (data.hasOwnProperty('is_main_sale')) {
                obj['is_main_sale'] = ApiClient.convertToType(data['is_main_sale'], 'Boolean');
            }
            if (data.hasOwnProperty('acquirer_reference')) {
                obj['acquirer_reference'] = ApiClient.convertToType(data['acquirer_reference'], 'String');
            }
            if (data.hasOwnProperty('celcoin')) {
                obj['celcoin'] = Celcoin.constructFromObject(data['celcoin']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
GetSaleDto.prototype['id'] = undefined;

/**
 * @member {String} description
 */
GetSaleDto.prototype['description'] = undefined;

/**
 * @member {String} protocol
 */
GetSaleDto.prototype['protocol'] = undefined;

/**
 * @member {String} created_at
 */
GetSaleDto.prototype['created_at'] = undefined;

/**
 * @member {String} updated_at
 */
GetSaleDto.prototype['updated_at'] = undefined;

/**
 * @member {Number} original_amount
 */
GetSaleDto.prototype['original_amount'] = undefined;

/**
 * @member {Number} amount
 */
GetSaleDto.prototype['amount'] = undefined;

/**
 * @member {module:model/GetSaleDto.TypeEnum} type
 */
GetSaleDto.prototype['type'] = undefined;

/**
 * @member {String} formatted_type
 */
GetSaleDto.prototype['formatted_type'] = undefined;

/**
 * @member {module:model/GetSaleDto.FormPaymentEnum} form_payment
 */
GetSaleDto.prototype['form_payment'] = undefined;

/**
 * @member {module:model/GetSaleDto.StatusEnum} status
 */
GetSaleDto.prototype['status'] = undefined;

/**
 * @member {String} settlement_day
 */
GetSaleDto.prototype['settlement_day'] = undefined;

/**
 * @member {module:model/GetSaleDto.SettlementStatusEnum} settlement_status
 */
GetSaleDto.prototype['settlement_status'] = undefined;

/**
 * @member {module:model/GetSaleSellerDto} seller
 */
GetSaleDto.prototype['seller'] = undefined;

/**
 * @member {module:model/GetSaleSalesPlanDto} sale_plan
 */
GetSaleDto.prototype['sale_plan'] = undefined;

/**
 * @member {module:model/GetSaleUserDto} user
 */
GetSaleDto.prototype['user'] = undefined;

/**
 * @member {module:model/GetSalePlanPaymentTypeDto} payment_type
 */
GetSaleDto.prototype['payment_type'] = undefined;

/**
 * @member {module:model/GetSalePayerDto} payer
 */
GetSaleDto.prototype['payer'] = undefined;

/**
 * @member {module:model/GetBilletDto} billet
 */
GetSaleDto.prototype['billet'] = undefined;

/**
 * @member {String} billet_id
 */
GetSaleDto.prototype['billet_id'] = undefined;

/**
 * @member {module:model/GetPaymentLinkDto} payment_link
 */
GetSaleDto.prototype['payment_link'] = undefined;

/**
 * @member {module:model/GetSplitRulesDto} split_rules
 */
GetSaleDto.prototype['split_rules'] = undefined;

/**
 * @member {Boolean} has_split_rules
 */
GetSaleDto.prototype['has_split_rules'] = undefined;

/**
 * @member {String} formatted_description
 */
GetSaleDto.prototype['formatted_description'] = undefined;

/**
 * @member {Number} installments
 */
GetSaleDto.prototype['installments'] = undefined;

/**
 * @member {String} seller_name
 */
GetSaleDto.prototype['seller_name'] = undefined;

/**
 * @member {String} seller_document
 */
GetSaleDto.prototype['seller_document'] = undefined;

/**
 * @member {String} seller_description
 */
GetSaleDto.prototype['seller_description'] = undefined;

/**
 * @member {String} payment_type_code
 */
GetSaleDto.prototype['payment_type_code'] = undefined;

/**
 * @member {String} payment_type_description
 */
GetSaleDto.prototype['payment_type_description'] = undefined;

/**
 * @member {Number} payment_type_installments
 */
GetSaleDto.prototype['payment_type_installments'] = undefined;

/**
 * @member {String} payer_name
 */
GetSaleDto.prototype['payer_name'] = undefined;

/**
 * @member {String} payer_email
 */
GetSaleDto.prototype['payer_email'] = undefined;

/**
 * @member {String} payer_document
 */
GetSaleDto.prototype['payer_document'] = undefined;

/**
 * @member {String} payer_phone
 */
GetSaleDto.prototype['payer_phone'] = undefined;

/**
 * @member {module:model/GetSalePayerAddressDto} payer_address
 */
GetSaleDto.prototype['payer_address'] = undefined;

/**
 * @member {String} sale_plan_name
 */
GetSaleDto.prototype['sale_plan_name'] = undefined;

/**
 * @member {String} created_by_user_name
 */
GetSaleDto.prototype['created_by_user_name'] = undefined;

/**
 * @member {String} created_by_user_email
 */
GetSaleDto.prototype['created_by_user_email'] = undefined;

/**
 * @member {Boolean} pre_capture
 */
GetSaleDto.prototype['pre_capture'] = undefined;

/**
 * @member {String} settlement_day_cancellation
 */
GetSaleDto.prototype['settlement_day_cancellation'] = undefined;

/**
 * @member {String} settlement_status_cancellation
 */
GetSaleDto.prototype['settlement_status_cancellation'] = undefined;

/**
 * @member {module:model/SettlementBatch} settlement_batch_cancellation
 */
GetSaleDto.prototype['settlement_batch_cancellation'] = undefined;

/**
 * @member {String} payment_day
 */
GetSaleDto.prototype['payment_day'] = undefined;

/**
 * @member {Number} fee
 */
GetSaleDto.prototype['fee'] = undefined;

/**
 * @member {Array.<String>} absorb_costs
 */
GetSaleDto.prototype['absorb_costs'] = undefined;

/**
 * @member {Number} order_number
 */
GetSaleDto.prototype['order_number'] = undefined;

/**
 * @member {Object} metadata
 */
GetSaleDto.prototype['metadata'] = undefined;

/**
 * @member {String} card_number
 */
GetSaleDto.prototype['card_number'] = undefined;

/**
 * @member {String} card_brand
 */
GetSaleDto.prototype['card_brand'] = undefined;

/**
 * @member {String} card_holder_name
 */
GetSaleDto.prototype['card_holder_name'] = undefined;

/**
 * @member {String} acquirer_code
 */
GetSaleDto.prototype['acquirer_code'] = undefined;

/**
 * @member {Boolean} confirmation_required
 */
GetSaleDto.prototype['confirmation_required'] = undefined;

/**
 * @member {String} extract_identification
 */
GetSaleDto.prototype['extract_identification'] = undefined;

/**
 * @member {String} confirmation_day
 */
GetSaleDto.prototype['confirmation_day'] = undefined;

/**
 * @member {String} service_id
 */
GetSaleDto.prototype['service_id'] = undefined;

/**
 * @member {String} split_description
 */
GetSaleDto.prototype['split_description'] = undefined;

/**
 * @member {String} formatted_split_description
 */
GetSaleDto.prototype['formatted_split_description'] = undefined;

/**
 * @member {String} cnab_id
 */
GetSaleDto.prototype['cnab_id'] = undefined;

/**
 * @member {Boolean} generate_payer
 */
GetSaleDto.prototype['generate_payer'] = undefined;

/**
 * @member {Boolean} is_main_sale
 */
GetSaleDto.prototype['is_main_sale'] = undefined;

/**
 * @member {String} acquirer_reference
 */
GetSaleDto.prototype['acquirer_reference'] = undefined;

/**
 * @member {module:model/Celcoin} celcoin
 */
GetSaleDto.prototype['celcoin'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GetSaleDto['TypeEnum'] = {

    /**
     * value: "boleto"
     * @const
     */
    "boleto": "boleto",

    /**
     * value: "pos"
     * @const
     */
    "pos": "pos",

    /**
     * value: "payment_link"
     * @const
     */
    "payment_link": "payment_link",

    /**
     * value: "protest_link"
     * @const
     */
    "protest_link": "protest_link",

    /**
     * value: "online"
     * @const
     */
    "online": "online",

    /**
     * value: "auto_generate_payment_link"
     * @const
     */
    "auto_generate_payment_link": "auto_generate_payment_link",

    /**
     * value: "auto_generate_protest_link"
     * @const
     */
    "auto_generate_protest_link": "auto_generate_protest_link",

    /**
     * value: "billet_code"
     * @const
     */
    "billet_code": "billet_code",

    /**
     * value: "bill_payment"
     * @const
     */
    "bill_payment": "bill_payment"
};


/**
 * Allowed values for the <code>form_payment</code> property.
 * @enum {String}
 * @readonly
 */
GetSaleDto['FormPaymentEnum'] = {

    /**
     * value: "credit"
     * @const
     */
    "credit": "credit",

    /**
     * value: "debit"
     * @const
     */
    "debit": "debit",

    /**
     * value: "billet"
     * @const
     */
    "billet": "billet",

    /**
     * value: "pix"
     * @const
     */
    "pix": "pix",

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "pix_pos"
     * @const
     */
    "pix_pos": "pix_pos"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
GetSaleDto['StatusEnum'] = {

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "pending_capture"
     * @const
     */
    "pending_capture": "pending_capture",

    /**
     * value: "in_progress_capture"
     * @const
     */
    "in_progress_capture": "in_progress_capture",

    /**
     * value: "succeeded"
     * @const
     */
    "succeeded": "succeeded",

    /**
     * value: "canceled"
     * @const
     */
    "canceled": "canceled",

    /**
     * value: "pending_cancel"
     * @const
     */
    "pending_cancel": "pending_cancel",

    /**
     * value: "abort"
     * @const
     */
    "abort": "abort",

    /**
     * value: "failed"
     * @const
     */
    "failed": "failed",

    /**
     * value: "waiting_confirmation"
     * @const
     */
    "waiting_confirmation": "waiting_confirmation",

    /**
     * value: "expired"
     * @const
     */
    "expired": "expired",

    /**
     * value: "waiting_cashIn"
     * @const
     */
    "waiting_cashIn": "waiting_cashIn"
};


/**
 * Allowed values for the <code>settlement_status</code> property.
 * @enum {String}
 * @readonly
 */
GetSaleDto['SettlementStatusEnum'] = {

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "paid"
     * @const
     */
    "paid": "paid",

    /**
     * value: "sent"
     * @const
     */
    "sent": "sent",

    /**
     * value: "pending_cancel"
     * @const
     */
    "pending_cancel": "pending_cancel",

    /**
     * value: "canceled"
     * @const
     */
    "canceled": "canceled",

    /**
     * value: "failed"
     * @const
     */
    "failed": "failed",

    /**
     * value: "resent"
     * @const
     */
    "resent": "resent"
};



export default GetSaleDto;

