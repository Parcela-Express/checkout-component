/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ParcelaExpressApi);
  }
}(this, function(expect, ParcelaExpressApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ParcelaExpressApi.PaymentsApi();
  });

  describe('(package)', function() {
    describe('PaymentsApi', function() {
      describe('capturePayment', function() {
        it('should call capturePayment successfully', function(done) {
          // TODO: uncomment, update parameter values for capturePayment call and complete the assertions
          /*

          instance.capturePayment(body, sellerId, saleId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSaleDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createDebitPayment', function() {
        it('should call createDebitPayment successfully', function(done) {
          // TODO: uncomment, update parameter values for createDebitPayment call and complete the assertions
          /*

          instance.createDebitPayment(body, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.CreateDebitPaymentResponseDTO);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createPayment', function() {
        it('should call createPayment successfully', function(done) {
          // TODO: uncomment, update parameter values for createPayment call and complete the assertions
          /*

          instance.createPayment(body, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.CreatePaymentResponseDTO);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createPaymentWithSplit', function() {
        it('should call createPaymentWithSplit successfully', function(done) {
          // TODO: uncomment, update parameter values for createPaymentWithSplit call and complete the assertions
          /*

          instance.createPaymentWithSplit(body, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.CreatePaymentResponseDTO);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createPixPayment', function() {
        it('should call createPixPayment successfully', function(done) {
          // TODO: uncomment, update parameter values for createPixPayment call and complete the assertions
          /*

          instance.createPixPayment(body, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.CreatePixPaymentResponseDTO);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createPixPaymentWithSplits', function() {
        it('should call createPixPaymentWithSplits successfully', function(done) {
          // TODO: uncomment, update parameter values for createPixPaymentWithSplits call and complete the assertions
          /*

          instance.createPixPaymentWithSplits(body, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.CreatePixPaymentWithSplitResponseDTO);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('paymentDetails', function() {
        it('should call paymentDetails successfully', function(done) {
          // TODO: uncomment, update parameter values for paymentDetails call and complete the assertions
          /*

          instance.paymentDetails(body, sellerId, saleId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.CreateDebitPaymentResponseDTO);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('paymentsControllerCancelPayment', function() {
        it('should call paymentsControllerCancelPayment successfully', function(done) {
          // TODO: uncomment, update parameter values for paymentsControllerCancelPayment call and complete the assertions
          /*

          instance.paymentsControllerCancelPayment(body, sellerId, saleId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.CancelPaymentResponseDTO);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
