/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ParcelaExpressApi);
  }
}(this, function(expect, ParcelaExpressApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetSaleSummaryTypeDto', function() {
      beforeEach(function() {
        instance = new ParcelaExpressApi.GetSaleSummaryTypeDto();
      });

      it('should create an instance of GetSaleSummaryTypeDto', function() {
        // TODO: update the code to test GetSaleSummaryTypeDto
        expect(instance).to.be.a(ParcelaExpressApi.GetSaleSummaryTypeDto);
      });

      it('should have the property typeSale (base name: "type_sale")', function() {
        // TODO: update the code to test the property typeSale
        expect(instance).to.have.property('typeSale');
        // expect(instance.typeSale).to.be(expectedValueLiteral);
      });

      it('should have the property typeName (base name: "type_name")', function() {
        // TODO: update the code to test the property typeName
        expect(instance).to.have.property('typeName');
        // expect(instance.typeName).to.be(expectedValueLiteral);
      });

      it('should have the property financialVolume (base name: "financial_volume")', function() {
        // TODO: update the code to test the property financialVolume
        expect(instance).to.have.property('financialVolume');
        // expect(instance.financialVolume).to.be(expectedValueLiteral);
      });

      it('should have the property grossVolume (base name: "gross_volume")', function() {
        // TODO: update the code to test the property grossVolume
        expect(instance).to.have.property('grossVolume');
        // expect(instance.grossVolume).to.be(expectedValueLiteral);
      });

      it('should have the property numberSales (base name: "number_sales")', function() {
        // TODO: update the code to test the property numberSales
        expect(instance).to.have.property('numberSales');
        // expect(instance.numberSales).to.be(expectedValueLiteral);
      });

      it('should have the property average (base name: "average")', function() {
        // TODO: update the code to test the property average
        expect(instance).to.have.property('average');
        // expect(instance.average).to.be(expectedValueLiteral);
      });

      it('should have the property percentage (base name: "percentage")', function() {
        // TODO: update the code to test the property percentage
        expect(instance).to.have.property('percentage');
        // expect(instance.percentage).to.be(expectedValueLiteral);
      });

    });
  });

}));
