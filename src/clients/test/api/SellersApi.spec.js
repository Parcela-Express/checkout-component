/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ParcelaExpressApi);
  }
}(this, function(expect, ParcelaExpressApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ParcelaExpressApi.SellersApi();
  });

  describe('(package)', function() {
    describe('SellersApi', function() {
      describe('addAcquirer', function() {
        it('should call addAcquirer successfully', function(done) {
          // TODO: uncomment, update parameter values for addAcquirer call and complete the assertions
          /*

          instance.addAcquirer(body, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSellerDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('addSalePlan', function() {
        it('should call addSalePlan successfully', function(done) {
          // TODO: uncomment, update parameter values for addSalePlan call and complete the assertions
          /*

          instance.addSalePlan(body, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSellerDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createSaleAutoGenerateLinkPayment', function() {
        it('should call createSaleAutoGenerateLinkPayment successfully', function(done) {
          // TODO: uncomment, update parameter values for createSaleAutoGenerateLinkPayment call and complete the assertions
          /*

          instance.createSaleAutoGenerateLinkPayment(body, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSellerSaleAutoGeneratePaymentLinkDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createSeller', function() {
        it('should call createSeller successfully', function(done) {
          // TODO: uncomment, update parameter values for createSeller call and complete the assertions
          /*

          instance.createSeller(body, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSellerDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createSellerPayer', function() {
        it('should call createSellerPayer successfully', function(done) {
          // TODO: uncomment, update parameter values for createSellerPayer call and complete the assertions
          /*

          instance.createSellerPayer(body, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.CreatePayerDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createSellerPos', function() {
        it('should call createSellerPos successfully', function(done) {
          // TODO: uncomment, update parameter values for createSellerPos call and complete the assertions
          /*

          instance.createSellerPos(body, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSellerPosDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createSellerSale', function() {
        it('should call createSellerSale successfully', function(done) {
          // TODO: uncomment, update parameter values for createSellerSale call and complete the assertions
          /*

          instance.createSellerSale(body, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSellerSaleDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('createSellerUser', function() {
        it('should call createSellerUser successfully', function(done) {
          // TODO: uncomment, update parameter values for createSellerUser call and complete the assertions
          /*

          instance.createSellerUser(body, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSellerUserDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('editSeller', function() {
        it('should call editSeller successfully', function(done) {
          // TODO: uncomment, update parameter values for editSeller call
          /*

          instance.editSeller(body, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAcceptedPaymentMethodsBySellerId', function() {
        it('should call getAcceptedPaymentMethodsBySellerId successfully', function(done) {
          // TODO: uncomment, update parameter values for getAcceptedPaymentMethodsBySellerId call and complete the assertions
          /*
          var opts = {};

          instance.getAcceptedPaymentMethodsBySellerId(sellerId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSellerAcceptedPaymentMethodsDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getAllSellerSalesSummaryChart', function() {
        it('should call getAllSellerSalesSummaryChart successfully', function(done) {
          // TODO: uncomment, update parameter values for getAllSellerSalesSummaryChart call and complete the assertions
          /*

          instance.getAllSellerSalesSummaryChart(sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSaleSummaryChartDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getSeller', function() {
        it('should call getSeller successfully', function(done) {
          // TODO: uncomment, update parameter values for getSeller call and complete the assertions
          /*

          instance.getSeller(sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSellerDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getSellerByCode', function() {
        it('should call getSellerByCode successfully', function(done) {
          // TODO: uncomment, update parameter values for getSellerByCode call and complete the assertions
          /*

          instance.getSellerByCode(codeId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSellerDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getSellerPos', function() {
        it('should call getSellerPos successfully', function(done) {
          // TODO: uncomment, update parameter values for getSellerPos call and complete the assertions
          /*

          instance.getSellerPos(sellerId, sellerPosId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSellerPosDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getSellerSale', function() {
        it('should call getSellerSale successfully', function(done) {
          // TODO: uncomment, update parameter values for getSellerSale call and complete the assertions
          /*

          instance.getSellerSale(sellerId, saleId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSaleDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getSellerSaleBillet', function() {
        it('should call getSellerSaleBillet successfully', function(done) {
          // TODO: uncomment, update parameter values for getSellerSaleBillet call and complete the assertions
          /*

          instance.getSellerSaleBillet(sellerId, saleId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetBilletDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('getSellerSalesSummary', function() {
        it('should call getSellerSalesSummary successfully', function(done) {
          // TODO: uncomment, update parameter values for getSellerSalesSummary call and complete the assertions
          /*
          var opts = {};

          instance.getSellerSalesSummary(sellerId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSaleSummaryDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listMerchantSellers', function() {
        it('should call listMerchantSellers successfully', function(done) {
          // TODO: uncomment, update parameter values for listMerchantSellers call and complete the assertions
          /*
          var opts = {};

          instance.listMerchantSellers(sellerId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Array);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(ParcelaExpressApi.GetMerchantSellerDto);
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listSellerAcquirers', function() {
        it('should call listSellerAcquirers successfully', function(done) {
          // TODO: uncomment, update parameter values for listSellerAcquirers call and complete the assertions
          /*

          instance.listSellerAcquirers(sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Array);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(ParcelaExpressApi.GetAcquirerDto);
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listSellerPaginatedPos', function() {
        it('should call listSellerPaginatedPos successfully', function(done) {
          // TODO: uncomment, update parameter values for listSellerPaginatedPos call and complete the assertions
          /*
          var opts = {};

          instance.listSellerPaginatedPos(limit, currentPage, status, sellerId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listSellerPayer', function() {
        it('should call listSellerPayer successfully', function(done) {
          // TODO: uncomment, update parameter values for listSellerPayer call and complete the assertions
          /*

          instance.listSellerPayer(payerDocument, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetPayerDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listSellerPayers', function() {
        it('should call listSellerPayers successfully', function(done) {
          // TODO: uncomment, update parameter values for listSellerPayers call and complete the assertions
          /*
          var opts = {};

          instance.listSellerPayers(limit, currentPage, sellerId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listSellerPaymentLinks', function() {
        it('should call listSellerPaymentLinks successfully', function(done) {
          // TODO: uncomment, update parameter values for listSellerPaymentLinks call and complete the assertions
          /*
          var opts = {};

          instance.listSellerPaymentLinks(limit, currentPage, sellerId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listSellerPos', function() {
        it('should call listSellerPos successfully', function(done) {
          // TODO: uncomment, update parameter values for listSellerPos call and complete the assertions
          /*

          instance.listSellerPos(sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Array);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(ParcelaExpressApi.GetSellerPosDto);
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listSellerProtestLinks', function() {
        it('should call listSellerProtestLinks successfully', function(done) {
          // TODO: uncomment, update parameter values for listSellerProtestLinks call and complete the assertions
          /*
          var opts = {};

          instance.listSellerProtestLinks(limit, currentPage, sellerId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listSellerSales', function() {
        it('should call listSellerSales successfully', function(done) {
          // TODO: uncomment, update parameter values for listSellerSales call and complete the assertions
          /*
          var opts = {};

          instance.listSellerSales(limit, currentPage, sellerId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listSellerUsers', function() {
        it('should call listSellerUsers successfully', function(done) {
          // TODO: uncomment, update parameter values for listSellerUsers call and complete the assertions
          /*
          var opts = {};

          instance.listSellerUsers(limit, currentPage, sellerId, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('listSellers', function() {
        it('should call listSellers successfully', function(done) {
          // TODO: uncomment, update parameter values for listSellers call and complete the assertions
          /*
          var opts = {};

          instance.listSellers(limit, currentPage, opts, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.InlineResponse200);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateSellerTheme', function() {
        it('should call updateSellerTheme successfully', function(done) {
          // TODO: uncomment, update parameter values for updateSellerTheme call
          /*

          instance.updateSellerTheme(body, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('updateSellerUser', function() {
        it('should call updateSellerUser successfully', function(done) {
          // TODO: uncomment, update parameter values for updateSellerUser call and complete the assertions
          /*

          instance.updateSellerUser(body, sellerId, userId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetSellerUserDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('uploadSellerLogo', function() {
        it('should call uploadSellerLogo successfully', function(done) {
          // TODO: uncomment, update parameter values for uploadSellerLogo call and complete the assertions
          /*

          instance.uploadSellerLogo(file, sellerId, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            expect(data).to.be.a(ParcelaExpressApi.GetLogoDto);

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
