/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateSalePlanPaymentTypeDto from './CreateSalePlanPaymentTypeDto';

/**
 * The CreateSalePlanDto model module.
 * @module model/CreateSalePlanDto
 * @version 1.0
 */
class CreateSalePlanDto {
    /**
     * Constructs a new <code>CreateSalePlanDto</code>.
     * @alias module:model/CreateSalePlanDto
     * @param name {String} 
     * @param description {String} 
     * @param type {module:model/CreateSalePlanDto.TypeEnum} 
     * @param payment_method {module:model/CreateSalePlanDto.PaymentMethodEnum} 
     * @param merchant_id {String} 
     * @param acquirer_id {String} 
     * @param settlement_plan_id {String} 
     * @param cost_plan_id {String} 
     */
    constructor(name, description, type, payment_method, merchant_id, acquirer_id, settlement_plan_id, cost_plan_id) { 
        
        CreateSalePlanDto.initialize(this, name, description, type, payment_method, merchant_id, acquirer_id, settlement_plan_id, cost_plan_id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, description, type, payment_method, merchant_id, acquirer_id, settlement_plan_id, cost_plan_id) { 
        obj['name'] = name;
        obj['description'] = description;
        obj['type'] = type;
        obj['payment_method'] = payment_method;
        obj['merchant_id'] = merchant_id;
        obj['acquirer_id'] = acquirer_id;
        obj['settlement_plan_id'] = settlement_plan_id;
        obj['cost_plan_id'] = cost_plan_id;
    }

    /**
     * Constructs a <code>CreateSalePlanDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateSalePlanDto} obj Optional instance to populate.
     * @return {module:model/CreateSalePlanDto} The populated <code>CreateSalePlanDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateSalePlanDto();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('payment_types')) {
                obj['payment_types'] = ApiClient.convertToType(data['payment_types'], [CreateSalePlanPaymentTypeDto]);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('payment_method')) {
                obj['payment_method'] = ApiClient.convertToType(data['payment_method'], 'String');
            }
            if (data.hasOwnProperty('merchant_id')) {
                obj['merchant_id'] = ApiClient.convertToType(data['merchant_id'], 'String');
            }
            if (data.hasOwnProperty('acquirer_id')) {
                obj['acquirer_id'] = ApiClient.convertToType(data['acquirer_id'], 'String');
            }
            if (data.hasOwnProperty('settlement_plan_id')) {
                obj['settlement_plan_id'] = ApiClient.convertToType(data['settlement_plan_id'], 'String');
            }
            if (data.hasOwnProperty('cost_plan_id')) {
                obj['cost_plan_id'] = ApiClient.convertToType(data['cost_plan_id'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} name
 */
CreateSalePlanDto.prototype['name'] = undefined;

/**
 * @member {String} description
 */
CreateSalePlanDto.prototype['description'] = undefined;

/**
 * @member {Array.<module:model/CreateSalePlanPaymentTypeDto>} payment_types
 */
CreateSalePlanDto.prototype['payment_types'] = undefined;

/**
 * @member {module:model/CreateSalePlanDto.TypeEnum} type
 */
CreateSalePlanDto.prototype['type'] = undefined;

/**
 * @member {module:model/CreateSalePlanDto.PaymentMethodEnum} payment_method
 */
CreateSalePlanDto.prototype['payment_method'] = undefined;

/**
 * @member {String} merchant_id
 */
CreateSalePlanDto.prototype['merchant_id'] = undefined;

/**
 * @member {String} acquirer_id
 */
CreateSalePlanDto.prototype['acquirer_id'] = undefined;

/**
 * @member {String} settlement_plan_id
 */
CreateSalePlanDto.prototype['settlement_plan_id'] = undefined;

/**
 * @member {String} cost_plan_id
 */
CreateSalePlanDto.prototype['cost_plan_id'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CreateSalePlanDto['TypeEnum'] = {

    /**
     * value: "markup"
     * @const
     */
    "markup": "markup",

    /**
     * value: "spread"
     * @const
     */
    "spread": "spread",

    /**
     * value: "split"
     * @const
     */
    "split": "split"
};


/**
 * Allowed values for the <code>payment_method</code> property.
 * @enum {String}
 * @readonly
 */
CreateSalePlanDto['PaymentMethodEnum'] = {

    /**
     * value: "pos"
     * @const
     */
    "pos": "pos",

    /**
     * value: "online"
     * @const
     */
    "online": "online"
};



export default CreateSalePlanDto;

