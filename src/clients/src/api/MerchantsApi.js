/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {GetMerchantDto} from '../model/GetMerchantDto';
import {GetMerchantSalePlanDto} from '../model/GetMerchantSalePlanDto';

/**
* Merchants service.
* @module api/MerchantsApi
* @version 1.0
*/
export class MerchantsApi {

    /**
    * Constructs a new MerchantsApi. 
    * @alias module:api/MerchantsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the listMerchantSalesPlans operation.
     * @callback moduleapi/MerchantsApi~listMerchantSalesPlansCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetMerchantSalePlanDto>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Listar planos de vendas do estabelecimento principal
     * @param {String} merchantId 
     * @param {module:api/MerchantsApi~listMerchantSalesPlansCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    listMerchantSalesPlans(merchantId, callback) {
      
      let postBody = null;
      // verify the required parameter 'merchantId' is set
      if (merchantId === undefined || merchantId === null) {
        throw new Error("Missing the required parameter 'merchantId' when calling listMerchantSalesPlans");
      }

      let pathParams = {
        'merchantId': merchantId
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetMerchantSalePlanDto];

      return this.apiClient.callApi(
        '/v1/merchants/{merchantId}/sales-plans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the listMerchants operation.
     * @callback moduleapi/MerchantsApi~listMerchantsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetMerchantDto>{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Listar estabelecimentos principais
     * @param {module:api/MerchantsApi~listMerchantsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    listMerchants(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetMerchantDto];

      return this.apiClient.callApi(
        '/v1/merchants', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}