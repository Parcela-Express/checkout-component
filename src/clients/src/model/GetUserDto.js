/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetRoleDto from './GetRoleDto';
import GetUserSellerDto from './GetUserSellerDto';

/**
 * The GetUserDto model module.
 * @module model/GetUserDto
 * @version 1.0
 */
class GetUserDto {
    /**
     * Constructs a new <code>GetUserDto</code>.
     * @alias module:model/GetUserDto
     * @param id {String} 
     * @param name {String} 
     * @param email {String} 
     * @param type {module:model/GetUserDto.TypeEnum} 
     * @param role {module:model/GetRoleDto} 
     * @param status {module:model/GetUserDto.StatusEnum} 
     * @param created_at {String} 
     * @param seller {module:model/GetUserSellerDto} 
     */
    constructor(id, name, email, type, role, status, created_at, seller) { 
        
        GetUserDto.initialize(this, id, name, email, type, role, status, created_at, seller);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, email, type, role, status, created_at, seller) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['email'] = email;
        obj['type'] = type;
        obj['role'] = role;
        obj['status'] = status;
        obj['created_at'] = created_at;
        obj['seller'] = seller;
    }

    /**
     * Constructs a <code>GetUserDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetUserDto} obj Optional instance to populate.
     * @return {module:model/GetUserDto} The populated <code>GetUserDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetUserDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = GetRoleDto.constructFromObject(data['role']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('seller')) {
                obj['seller'] = GetUserSellerDto.constructFromObject(data['seller']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
GetUserDto.prototype['id'] = undefined;

/**
 * @member {String} name
 */
GetUserDto.prototype['name'] = undefined;

/**
 * @member {String} email
 */
GetUserDto.prototype['email'] = undefined;

/**
 * @member {module:model/GetUserDto.TypeEnum} type
 */
GetUserDto.prototype['type'] = undefined;

/**
 * @member {module:model/GetRoleDto} role
 */
GetUserDto.prototype['role'] = undefined;

/**
 * @member {module:model/GetUserDto.StatusEnum} status
 */
GetUserDto.prototype['status'] = undefined;

/**
 * @member {String} created_at
 */
GetUserDto.prototype['created_at'] = undefined;

/**
 * @member {module:model/GetUserSellerDto} seller
 */
GetUserDto.prototype['seller'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GetUserDto['TypeEnum'] = {

    /**
     * value: "merchant"
     * @const
     */
    "merchant": "merchant",

    /**
     * value: "seller"
     * @const
     */
    "seller": "seller",

    /**
     * value: "backoffice"
     * @const
     */
    "backoffice": "backoffice"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
GetUserDto['StatusEnum'] = {

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive",

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending"
};



export default GetUserDto;

