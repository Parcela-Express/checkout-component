/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ParcelaExpressApi);
  }
}(this, function(expect, ParcelaExpressApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetThemeDto', function() {
      beforeEach(function() {
        instance = new ParcelaExpressApi.GetThemeDto();
      });

      it('should create an instance of GetThemeDto', function() {
        // TODO: update the code to test GetThemeDto
        expect(instance).to.be.a(ParcelaExpressApi.GetThemeDto);
      });

      it('should have the property primaryColor (base name: "primary_color")', function() {
        // TODO: update the code to test the property primaryColor
        expect(instance).to.have.property('primaryColor');
        // expect(instance.primaryColor).to.be(expectedValueLiteral);
      });

      it('should have the property secondaryColor (base name: "secondary_color")', function() {
        // TODO: update the code to test the property secondaryColor
        expect(instance).to.have.property('secondaryColor');
        // expect(instance.secondaryColor).to.be(expectedValueLiteral);
      });

      it('should have the property defaultColor (base name: "default_color")', function() {
        // TODO: update the code to test the property defaultColor
        expect(instance).to.have.property('defaultColor');
        // expect(instance.defaultColor).to.be(expectedValueLiteral);
      });

      it('should have the property textColor (base name: "text_color")', function() {
        // TODO: update the code to test the property textColor
        expect(instance).to.have.property('textColor');
        // expect(instance.textColor).to.be(expectedValueLiteral);
      });

      it('should have the property menuTextColor (base name: "menu_text_color")', function() {
        // TODO: update the code to test the property menuTextColor
        expect(instance).to.have.property('menuTextColor');
        // expect(instance.menuTextColor).to.be(expectedValueLiteral);
      });

    });
  });

}));
