/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PaginatedDto from '../model/PaginatedDto';
import UploadReturnFileResponseDto from '../model/UploadReturnFileResponseDto';

/**
* ShippingReturn service.
* @module api/ShippingReturnApi
* @version 1.0
*/
export default class ShippingReturnApi {

    /**
    * Constructs a new ShippingReturnApi. 
    * @alias module:api/ShippingReturnApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the paginatedListUploads operation.
     * @callback module:api/ShippingReturnApi~paginatedListUploadsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaginatedDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Listar envios de arquivos paginado
     * @param {Number} limit 
     * @param {Number} current_page 
     * @param {Object} opts Optional parameters
     * @param {String} opts.start_date Formato: yyyy-mm-dd
     * @param {String} opts.end_date Formato: yyyy-mm-dd
     * @param {module:api/ShippingReturnApi~paginatedListUploadsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaginatedDto}
     */
    paginatedListUploads(limit, current_page, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'limit' is set
      if (limit === undefined || limit === null) {
        throw new Error("Missing the required parameter 'limit' when calling paginatedListUploads");
      }
      // verify the required parameter 'current_page' is set
      if (current_page === undefined || current_page === null) {
        throw new Error("Missing the required parameter 'current_page' when calling paginatedListUploads");
      }

      let pathParams = {
      };
      let queryParams = {
        'start_date': opts['start_date'],
        'end_date': opts['end_date'],
        'limit': limit,
        'current_page': current_page
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaginatedDto;
      return this.apiClient.callApi(
        '/v1/shipping-return', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the uploadReturnFile operation.
     * @callback module:api/ShippingReturnApi~uploadReturnFileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UploadReturnFileResponseDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enviar arquivo de retorno (.ret) do Bradesco
     * @param {File} file 
     * @param {module:api/ShippingReturnApi~uploadReturnFileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UploadReturnFileResponseDto}
     */
    uploadReturnFile(file, callback) {
      let postBody = null;
      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling uploadReturnFile");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'file': file
      };

      let authNames = ['bearer'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = UploadReturnFileResponseDto;
      return this.apiClient.callApi(
        '/v1/shipping-return/upload', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
