/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ParcelaExpressApi);
  }
}(this, function(expect, ParcelaExpressApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('BillingAddressDTO', function() {
      beforeEach(function() {
        instance = new ParcelaExpressApi.BillingAddressDTO();
      });

      it('should create an instance of BillingAddressDTO', function() {
        // TODO: update the code to test BillingAddressDTO
        expect(instance).to.be.a(ParcelaExpressApi.BillingAddressDTO);
      });

      it('should have the property city (base name: "city")', function() {
        // TODO: update the code to test the property city
        expect(instance).to.have.property('city');
        // expect(instance.city).to.be(expectedValueLiteral);
      });

      it('should have the property houseNumberOrName (base name: "house_number_or_name")', function() {
        // TODO: update the code to test the property houseNumberOrName
        expect(instance).to.have.property('houseNumberOrName');
        // expect(instance.houseNumberOrName).to.be(expectedValueLiteral);
      });

      it('should have the property postalCode (base name: "postal_code")', function() {
        // TODO: update the code to test the property postalCode
        expect(instance).to.have.property('postalCode');
        // expect(instance.postalCode).to.be(expectedValueLiteral);
      });

      it('should have the property stateOrProvince (base name: "state_or_province")', function() {
        // TODO: update the code to test the property stateOrProvince
        expect(instance).to.have.property('stateOrProvince');
        // expect(instance.stateOrProvince).to.be(expectedValueLiteral);
      });

      it('should have the property street (base name: "street")', function() {
        // TODO: update the code to test the property street
        expect(instance).to.have.property('street');
        // expect(instance.street).to.be(expectedValueLiteral);
      });

      it('should have the property complement (base name: "complement")', function() {
        // TODO: update the code to test the property complement
        expect(instance).to.have.property('complement');
        // expect(instance.complement).to.be(expectedValueLiteral);
      });

      it('should have the property district (base name: "district")', function() {
        // TODO: update the code to test the property district
        expect(instance).to.have.property('district');
        // expect(instance.district).to.be(expectedValueLiteral);
      });

    });
  });

}));
