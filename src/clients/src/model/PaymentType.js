/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The PaymentType model module.
 * @module model/PaymentType
 * @version 1.0
 */
export class PaymentType {
  /**
   * Constructs a new <code>PaymentType</code>.
   * @alias module:model/PaymentType
   * @class
   * @param code {String} 
   * @param fee {Number} 
   * @param feeType {module:model/PaymentType.FeeTypeEnum} 
   * @param description {String} 
   * @param installments {Number} 
   * @param operationMode {module:model/PaymentType.OperationModeEnum} 
   */
  constructor(code, fee, feeType, description, installments, operationMode) {
    this.code = code;
    this.fee = fee;
    this.feeType = feeType;
    this.description = description;
    this.installments = installments;
    this.operationMode = operationMode;
  }

  /**
   * Constructs a <code>PaymentType</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/PaymentType} obj Optional instance to populate.
   * @return {module:model/PaymentType} The populated <code>PaymentType</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new PaymentType();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('code'))
        obj.code = ApiClient.convertToType(data['code'], 'String');
      if (data.hasOwnProperty('fee'))
        obj.fee = ApiClient.convertToType(data['fee'], 'Number');
      if (data.hasOwnProperty('fee_type'))
        obj.feeType = ApiClient.convertToType(data['fee_type'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('installments'))
        obj.installments = ApiClient.convertToType(data['installments'], 'Number');
      if (data.hasOwnProperty('teto'))
        obj.teto = ApiClient.convertToType(data['teto'], 'Number');
      if (data.hasOwnProperty('piso'))
        obj.piso = ApiClient.convertToType(data['piso'], 'Number');
      if (data.hasOwnProperty('operation_mode'))
        obj.operationMode = ApiClient.convertToType(data['operation_mode'], 'String');
    }
    return obj;
  }
}

/**
 * @member {String} id
 */
PaymentType.prototype.id = undefined;

/**
 * @member {String} code
 */
PaymentType.prototype.code = undefined;

/**
 * @member {Number} fee
 */
PaymentType.prototype.fee = undefined;

/**
 * Allowed values for the <code>feeType</code> property.
 * @enum {String}
 * @readonly
 */
PaymentType.FeeTypeEnum = {
  /**
   * value: "fixed"
   * @const
   */
  fixed: "fixed",

  /**
   * value: "percent"
   * @const
   */
  percent: "percent"
};
/**
 * @member {module:model/PaymentType.FeeTypeEnum} feeType
 */
PaymentType.prototype.feeType = undefined;

/**
 * @member {String} description
 */
PaymentType.prototype.description = undefined;

/**
 * @member {Number} installments
 */
PaymentType.prototype.installments = undefined;

/**
 * @member {Number} teto
 */
PaymentType.prototype.teto = undefined;

/**
 * @member {Number} piso
 */
PaymentType.prototype.piso = undefined;

/**
 * Allowed values for the <code>operationMode</code> property.
 * @enum {String}
 * @readonly
 */
PaymentType.OperationModeEnum = {
  /**
   * value: "credit"
   * @const
   */
  credit: "credit",

  /**
   * value: "debit"
   * @const
   */
  debit: "debit",

  /**
   * value: "pix"
   * @const
   */
  pix: "pix",

  /**
   * value: "billet"
   * @const
   */
  billet: "billet"
};
/**
 * @member {module:model/PaymentType.OperationModeEnum} operationMode
 */
PaymentType.prototype.operationMode = undefined;

