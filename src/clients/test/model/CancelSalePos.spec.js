/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ParcelaExpressApi);
  }
}(this, function(expect, ParcelaExpressApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CancelSalePos', function() {
      beforeEach(function() {
        instance = new ParcelaExpressApi.CancelSalePos();
      });

      it('should create an instance of CancelSalePos', function() {
        // TODO: update the code to test CancelSalePos
        expect(instance).to.be.a(ParcelaExpressApi.CancelSalePos);
      });

      it('should have the property terminalId (base name: "terminal_id")', function() {
        // TODO: update the code to test the property terminalId
        expect(instance).to.have.property('terminalId');
        // expect(instance.terminalId).to.be(expectedValueLiteral);
      });

      it('should have the property abortReason (base name: "abort_reason")', function() {
        // TODO: update the code to test the property abortReason
        expect(instance).to.have.property('abortReason');
        // expect(instance.abortReason).to.be(expectedValueLiteral);
      });

      it('should have the property serviceId (base name: "service_id")', function() {
        // TODO: update the code to test the property serviceId
        expect(instance).to.have.property('serviceId');
        // expect(instance.serviceId).to.be(expectedValueLiteral);
      });

      it('should have the property cancelSaleId (base name: "cancel_sale_id")', function() {
        // TODO: update the code to test the property cancelSaleId
        expect(instance).to.have.property('cancelSaleId');
        // expect(instance.cancelSaleId).to.be(expectedValueLiteral);
      });

      it('should have the property cancelServiceId (base name: "cancel_service_id")', function() {
        // TODO: update the code to test the property cancelServiceId
        expect(instance).to.have.property('cancelServiceId');
        // expect(instance.cancelServiceId).to.be(expectedValueLiteral);
      });

    });
  });

}));
