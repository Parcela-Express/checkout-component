/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateSellerRiskDto from '../model/CreateSellerRiskDto';
import GetSellerRiskDto from '../model/GetSellerRiskDto';
import UpdateSellerRiskDto from '../model/UpdateSellerRiskDto';

/**
* SellerRisks service.
* @module api/SellerRisksApi
* @version 1.0
*/
export default class SellerRisksApi {

    /**
    * Constructs a new SellerRisksApi. 
    * @alias module:api/SellerRisksApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createSellerRisk operation.
     * @callback module:api/SellerRisksApi~createSellerRiskCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSellerRiskDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Criar um risco de estabelecimento
     * @param {module:model/CreateSellerRiskDto} CreateSellerRiskDto 
     * @param {module:api/SellerRisksApi~createSellerRiskCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSellerRiskDto}
     */
    createSellerRisk(CreateSellerRiskDto, callback) {
      let postBody = CreateSellerRiskDto;
      // verify the required parameter 'CreateSellerRiskDto' is set
      if (CreateSellerRiskDto === undefined || CreateSellerRiskDto === null) {
        throw new Error("Missing the required parameter 'CreateSellerRiskDto' when calling createSellerRisk");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetSellerRiskDto;
      return this.apiClient.callApi(
        '/v1/seller-risks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the editsellerRisk operation.
     * @callback module:api/SellerRisksApi~editsellerRiskCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSellerRiskDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Editar risco do estabelecimento
     * @param {String} sellerRiskId 
     * @param {module:model/UpdateSellerRiskDto} UpdateSellerRiskDto 
     * @param {module:api/SellerRisksApi~editsellerRiskCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSellerRiskDto}
     */
    editsellerRisk(sellerRiskId, UpdateSellerRiskDto, callback) {
      let postBody = UpdateSellerRiskDto;
      // verify the required parameter 'sellerRiskId' is set
      if (sellerRiskId === undefined || sellerRiskId === null) {
        throw new Error("Missing the required parameter 'sellerRiskId' when calling editsellerRisk");
      }
      // verify the required parameter 'UpdateSellerRiskDto' is set
      if (UpdateSellerRiskDto === undefined || UpdateSellerRiskDto === null) {
        throw new Error("Missing the required parameter 'UpdateSellerRiskDto' when calling editsellerRisk");
      }

      let pathParams = {
        'sellerRiskId': sellerRiskId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = GetSellerRiskDto;
      return this.apiClient.callApi(
        '/v1/seller-risks/{sellerRiskId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSellerRisk operation.
     * @callback module:api/SellerRisksApi~getSellerRiskCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSellerRiskDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obter risco pelo ID
     * @param {String} sellerRiskId 
     * @param {module:api/SellerRisksApi~getSellerRiskCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSellerRiskDto}
     */
    getSellerRisk(sellerRiskId, callback) {
      let postBody = null;
      // verify the required parameter 'sellerRiskId' is set
      if (sellerRiskId === undefined || sellerRiskId === null) {
        throw new Error("Missing the required parameter 'sellerRiskId' when calling getSellerRisk");
      }

      let pathParams = {
        'sellerRiskId': sellerRiskId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetSellerRiskDto;
      return this.apiClient.callApi(
        '/v1/seller-risks/{sellerRiskId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSellerRiskBySellerId operation.
     * @callback module:api/SellerRisksApi~getSellerRiskBySellerIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSellerRiskDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obter risco pelo sellerId
     * @param {String} sellerId 
     * @param {module:api/SellerRisksApi~getSellerRiskBySellerIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSellerRiskDto}
     */
    getSellerRiskBySellerId(sellerId, callback) {
      let postBody = null;
      // verify the required parameter 'sellerId' is set
      if (sellerId === undefined || sellerId === null) {
        throw new Error("Missing the required parameter 'sellerId' when calling getSellerRiskBySellerId");
      }

      let pathParams = {
        'sellerId': sellerId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetSellerRiskDto;
      return this.apiClient.callApi(
        '/v1/seller-risks/seller/{sellerId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
