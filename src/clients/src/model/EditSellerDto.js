/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {CreateAddressDto} from './CreateAddressDto';
import {CreateBankAccountDto} from './CreateBankAccountDto';

/**
 * The EditSellerDto model module.
 * @module model/EditSellerDto
 * @version 1.0
 */
export class EditSellerDto {
  /**
   * Constructs a new <code>EditSellerDto</code>.
   * @alias module:model/EditSellerDto
   * @class
   * @param name {String} 
   * @param description {String} 
   * @param document {String} 
   * @param code {String} 
   * @param settlementType {module:model/EditSellerDto.SettlementTypeEnum} 
   * @param address {module:model/CreateAddressDto} 
   * @param bankAccount {module:model/CreateBankAccountDto} 
   * @param monthlyBilling {Number} 
   * @param status {module:model/EditSellerDto.StatusEnum} 
   * @param type {module:model/EditSellerDto.TypeEnum} 
   * @param merchantId {String} 
   * @param salePlanId {String} 
   * @param billetProvider {module:model/EditSellerDto.BilletProviderEnum} 
   */
  constructor(name, description, document, code, settlementType, address, bankAccount, monthlyBilling, status, type, merchantId, salePlanId, billetProvider) {
    this.name = name;
    this.description = description;
    this.document = document;
    this.code = code;
    this.settlementType = settlementType;
    this.address = address;
    this.bankAccount = bankAccount;
    this.monthlyBilling = monthlyBilling;
    this.status = status;
    this.type = type;
    this.merchantId = merchantId;
    this.salePlanId = salePlanId;
    this.billetProvider = billetProvider;
  }

  /**
   * Constructs a <code>EditSellerDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EditSellerDto} obj Optional instance to populate.
   * @return {module:model/EditSellerDto} The populated <code>EditSellerDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new EditSellerDto();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('document'))
        obj.document = ApiClient.convertToType(data['document'], 'String');
      if (data.hasOwnProperty('state_registration'))
        obj.stateRegistration = ApiClient.convertToType(data['state_registration'], 'String');
      if (data.hasOwnProperty('code'))
        obj.code = ApiClient.convertToType(data['code'], 'String');
      if (data.hasOwnProperty('created_at'))
        obj.createdAt = ApiClient.convertToType(data['created_at'], 'String');
      if (data.hasOwnProperty('settlement_type'))
        obj.settlementType = ApiClient.convertToType(data['settlement_type'], 'String');
      if (data.hasOwnProperty('address'))
        obj.address = CreateAddressDto.constructFromObject(data['address']);
      if (data.hasOwnProperty('bank_account'))
        obj.bankAccount = CreateBankAccountDto.constructFromObject(data['bank_account']);
      if (data.hasOwnProperty('monthly_billing'))
        obj.monthlyBilling = ApiClient.convertToType(data['monthly_billing'], 'Number');
      if (data.hasOwnProperty('covenant'))
        obj.covenant = ApiClient.convertToType(data['covenant'], 'String');
      if (data.hasOwnProperty('is_split'))
        obj.isSplit = ApiClient.convertToType(data['is_split'], 'Boolean');
      if (data.hasOwnProperty('phone'))
        obj.phone = ApiClient.convertToType(data['phone'], 'String');
      if (data.hasOwnProperty('absorb_costs'))
        obj.absorbCosts = ApiClient.convertToType(data['absorb_costs'], ['String']);
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('merchant_id'))
        obj.merchantId = ApiClient.convertToType(data['merchant_id'], 'String');
      if (data.hasOwnProperty('sale_plan_id'))
        obj.salePlanId = ApiClient.convertToType(data['sale_plan_id'], 'String');
      if (data.hasOwnProperty('pix_pos'))
        obj.pixPos = ApiClient.convertToType(data['pix_pos'], 'Boolean');
      if (data.hasOwnProperty('billet_provider'))
        obj.billetProvider = ApiClient.convertToType(data['billet_provider'], 'String');
      if (data.hasOwnProperty('no_payment_methods'))
        obj.noPaymentMethods = ApiClient.convertToType(data['no_payment_methods'], ['String']);
      if (data.hasOwnProperty('has_split_rules'))
        obj.hasSplitRules = ApiClient.convertToType(data['has_split_rules'], 'Boolean');
    }
    return obj;
  }
}

/**
 * @member {String} name
 */
EditSellerDto.prototype.name = undefined;

/**
 * @member {String} description
 */
EditSellerDto.prototype.description = undefined;

/**
 * @member {String} document
 */
EditSellerDto.prototype.document = undefined;

/**
 * @member {String} stateRegistration
 */
EditSellerDto.prototype.stateRegistration = undefined;

/**
 * @member {String} code
 */
EditSellerDto.prototype.code = undefined;

/**
 * @member {String} createdAt
 */
EditSellerDto.prototype.createdAt = undefined;

/**
 * Allowed values for the <code>settlementType</code> property.
 * @enum {String}
 * @readonly
 */
EditSellerDto.SettlementTypeEnum = {
  /**
   * value: "PIX"
   * @const
   */
  PIX: "PIX",

  /**
   * value: "TED"
   * @const
   */
  TED: "TED"
};
/**
 * @member {module:model/EditSellerDto.SettlementTypeEnum} settlementType
 */
EditSellerDto.prototype.settlementType = undefined;

/**
 * @member {module:model/CreateAddressDto} address
 */
EditSellerDto.prototype.address = undefined;

/**
 * @member {module:model/CreateBankAccountDto} bankAccount
 */
EditSellerDto.prototype.bankAccount = undefined;

/**
 * @member {Number} monthlyBilling
 */
EditSellerDto.prototype.monthlyBilling = undefined;

/**
 * @member {String} covenant
 */
EditSellerDto.prototype.covenant = undefined;

/**
 * @member {Boolean} isSplit
 */
EditSellerDto.prototype.isSplit = undefined;

/**
 * @member {String} phone
 */
EditSellerDto.prototype.phone = undefined;

/**
 * @member {Array.<String>} absorbCosts
 */
EditSellerDto.prototype.absorbCosts = undefined;

/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
EditSellerDto.StatusEnum = {
  /**
   * value: "activated"
   * @const
   */
  activated: "activated",

  /**
   * value: "inactive"
   * @const
   */
  inactive: "inactive",

  /**
   * value: "pending"
   * @const
   */
  pending: "pending"
};
/**
 * @member {module:model/EditSellerDto.StatusEnum} status
 */
EditSellerDto.prototype.status = undefined;

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
EditSellerDto.TypeEnum = {
  /**
   * value: "transaction"
   * @const
   */
  transaction: "transaction",

  /**
   * value: "registry"
   * @const
   */
  registry: "registry",

  /**
   * value: "group"
   * @const
   */
  group: "group"
};
/**
 * @member {module:model/EditSellerDto.TypeEnum} type
 */
EditSellerDto.prototype.type = undefined;

/**
 * @member {String} merchantId
 */
EditSellerDto.prototype.merchantId = undefined;

/**
 * @member {String} salePlanId
 */
EditSellerDto.prototype.salePlanId = undefined;

/**
 * @member {Boolean} pixPos
 */
EditSellerDto.prototype.pixPos = undefined;

/**
 * Allowed values for the <code>billetProvider</code> property.
 * @enum {String}
 * @readonly
 */
EditSellerDto.BilletProviderEnum = {
  /**
   * value: "adyen"
   * @const
   */
  adyen: "adyen",

  /**
   * value: "bradesco"
   * @const
   */
  bradesco: "bradesco"
};
/**
 * @member {module:model/EditSellerDto.BilletProviderEnum} billetProvider
 */
EditSellerDto.prototype.billetProvider = undefined;

/**
 * @member {Array.<String>} noPaymentMethods
 */
EditSellerDto.prototype.noPaymentMethods = undefined;

/**
 * @member {Boolean} hasSplitRules
 */
EditSellerDto.prototype.hasSplitRules = undefined;

