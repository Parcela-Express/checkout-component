/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ParcelaExpressApi);
  }
}(this, function(expect, ParcelaExpressApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetSellerPosDto', function() {
      beforeEach(function() {
        instance = new ParcelaExpressApi.GetSellerPosDto();
      });

      it('should create an instance of GetSellerPosDto', function() {
        // TODO: update the code to test GetSellerPosDto
        expect(instance).to.be.a(ParcelaExpressApi.GetSellerPosDto);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property associatedAt (base name: "associated_at")', function() {
        // TODO: update the code to test the property associatedAt
        expect(instance).to.have.property('associatedAt');
        // expect(instance.associatedAt).to.be(expectedValueLiteral);
      });

      it('should have the property terminalId (base name: "terminal_id")', function() {
        // TODO: update the code to test the property terminalId
        expect(instance).to.have.property('terminalId');
        // expect(instance.terminalId).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property acquirer (base name: "acquirer")', function() {
        // TODO: update the code to test the property acquirer
        expect(instance).to.have.property('acquirer');
        // expect(instance.acquirer).to.be(expectedValueLiteral);
      });

      it('should have the property seller (base name: "seller")', function() {
        // TODO: update the code to test the property seller
        expect(instance).to.have.property('seller');
        // expect(instance.seller).to.be(expectedValueLiteral);
      });

    });
  });

}));
