/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {GenerateShippingDTO} from '../model/GenerateShippingDTO';

/**
* Bradesco service.
* @module api/BradescoApi
* @version 1.0
*/
export class BradescoApi {

    /**
    * Constructs a new BradescoApi. 
    * @alias module:api/BradescoApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the bradescoControllerCreateShipping operation.
     * @callback moduleapi/BradescoApi~bradescoControllerCreateShippingCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Criar uma nova remessa
     * @param {module:model/GenerateShippingDTO} body 
     * @param {module:api/BradescoApi~bradescoControllerCreateShippingCallback} callback The callback function, accepting three arguments: error, data, response
     */
    bradescoControllerCreateShipping(body, callback) {
      
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling bradescoControllerCreateShipping");
      }

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['bearer'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/v1/bradesco/shipping', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the bradescoControllerGetValue operation.
     * @callback moduleapi/BradescoApi~bradescoControllerGetValueCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retorna valor total separado por dia e per√≠odo
     * @param {String} _date 
     * @param {module:model/String} period 
     * @param {module:api/BradescoApi~bradescoControllerGetValueCallback} callback The callback function, accepting three arguments: error, data, response
     */
    bradescoControllerGetValue(_date, period, callback) {
      
      let postBody = null;
      // verify the required parameter '_date' is set
      if (_date === undefined || _date === null) {
        throw new Error("Missing the required parameter '_date' when calling bradescoControllerGetValue");
      }
      // verify the required parameter 'period' is set
      if (period === undefined || period === null) {
        throw new Error("Missing the required parameter 'period' when calling bradescoControllerGetValue");
      }

      let pathParams = {
        'date': _date,'period': period
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['bearer'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/v1/bradesco/total/{date}/{period}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}