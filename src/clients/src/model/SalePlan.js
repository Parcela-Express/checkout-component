/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Acquirer from './Acquirer';
import CostPlan from './CostPlan';
import Merchant from './Merchant';
import PaymentType from './PaymentType';
import SettlementPlan from './SettlementPlan';

/**
 * The SalePlan model module.
 * @module model/SalePlan
 * @version 1.0
 */
class SalePlan {
    /**
     * Constructs a new <code>SalePlan</code>.
     * @alias module:model/SalePlan
     * @param name {String} 
     * @param description {String} 
     * @param type {module:model/SalePlan.TypeEnum} 
     * @param payment_method {module:model/SalePlan.PaymentMethodEnum} 
     * @param merchant {module:model/Merchant} 
     * @param acquirer {module:model/Acquirer} 
     * @param settlement_plan {module:model/SettlementPlan} 
     * @param cost_plan {module:model/CostPlan} 
     */
    constructor(name, description, type, payment_method, merchant, acquirer, settlement_plan, cost_plan) { 
        
        SalePlan.initialize(this, name, description, type, payment_method, merchant, acquirer, settlement_plan, cost_plan);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, description, type, payment_method, merchant, acquirer, settlement_plan, cost_plan) { 
        obj['name'] = name;
        obj['description'] = description;
        obj['type'] = type;
        obj['payment_method'] = payment_method;
        obj['merchant'] = merchant;
        obj['acquirer'] = acquirer;
        obj['settlement_plan'] = settlement_plan;
        obj['cost_plan'] = cost_plan;
    }

    /**
     * Constructs a <code>SalePlan</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SalePlan} obj Optional instance to populate.
     * @return {module:model/SalePlan} The populated <code>SalePlan</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SalePlan();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('payment_types')) {
                obj['payment_types'] = ApiClient.convertToType(data['payment_types'], [PaymentType]);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('payment_method')) {
                obj['payment_method'] = ApiClient.convertToType(data['payment_method'], 'String');
            }
            if (data.hasOwnProperty('merchant')) {
                obj['merchant'] = Merchant.constructFromObject(data['merchant']);
            }
            if (data.hasOwnProperty('merchant_id')) {
                obj['merchant_id'] = ApiClient.convertToType(data['merchant_id'], 'String');
            }
            if (data.hasOwnProperty('acquirer')) {
                obj['acquirer'] = Acquirer.constructFromObject(data['acquirer']);
            }
            if (data.hasOwnProperty('acquirer_id')) {
                obj['acquirer_id'] = ApiClient.convertToType(data['acquirer_id'], 'String');
            }
            if (data.hasOwnProperty('settlement_plan')) {
                obj['settlement_plan'] = SettlementPlan.constructFromObject(data['settlement_plan']);
            }
            if (data.hasOwnProperty('settlement_plan_id')) {
                obj['settlement_plan_id'] = ApiClient.convertToType(data['settlement_plan_id'], 'String');
            }
            if (data.hasOwnProperty('cost_plan')) {
                obj['cost_plan'] = CostPlan.constructFromObject(data['cost_plan']);
            }
            if (data.hasOwnProperty('cost_plan_id')) {
                obj['cost_plan_id'] = ApiClient.convertToType(data['cost_plan_id'], 'String');
            }
            if (data.hasOwnProperty('risk_value')) {
                obj['risk_value'] = ApiClient.convertToType(data['risk_value'], 'Number');
            }
            if (data.hasOwnProperty('inactive')) {
                obj['inactive'] = ApiClient.convertToType(data['inactive'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
SalePlan.prototype['id'] = undefined;

/**
 * @member {String} name
 */
SalePlan.prototype['name'] = undefined;

/**
 * @member {String} description
 */
SalePlan.prototype['description'] = undefined;

/**
 * @member {Array.<module:model/PaymentType>} payment_types
 */
SalePlan.prototype['payment_types'] = undefined;

/**
 * @member {module:model/SalePlan.TypeEnum} type
 */
SalePlan.prototype['type'] = undefined;

/**
 * @member {module:model/SalePlan.PaymentMethodEnum} payment_method
 */
SalePlan.prototype['payment_method'] = undefined;

/**
 * @member {module:model/Merchant} merchant
 */
SalePlan.prototype['merchant'] = undefined;

/**
 * @member {String} merchant_id
 */
SalePlan.prototype['merchant_id'] = undefined;

/**
 * @member {module:model/Acquirer} acquirer
 */
SalePlan.prototype['acquirer'] = undefined;

/**
 * @member {String} acquirer_id
 */
SalePlan.prototype['acquirer_id'] = undefined;

/**
 * @member {module:model/SettlementPlan} settlement_plan
 */
SalePlan.prototype['settlement_plan'] = undefined;

/**
 * @member {String} settlement_plan_id
 */
SalePlan.prototype['settlement_plan_id'] = undefined;

/**
 * @member {module:model/CostPlan} cost_plan
 */
SalePlan.prototype['cost_plan'] = undefined;

/**
 * @member {String} cost_plan_id
 */
SalePlan.prototype['cost_plan_id'] = undefined;

/**
 * @member {Number} risk_value
 */
SalePlan.prototype['risk_value'] = undefined;

/**
 * @member {Boolean} inactive
 */
SalePlan.prototype['inactive'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
SalePlan['TypeEnum'] = {

    /**
     * value: "markup"
     * @const
     */
    "markup": "markup",

    /**
     * value: "spread"
     * @const
     */
    "spread": "spread",

    /**
     * value: "split"
     * @const
     */
    "split": "split"
};


/**
 * Allowed values for the <code>payment_method</code> property.
 * @enum {String}
 * @readonly
 */
SalePlan['PaymentMethodEnum'] = {

    /**
     * value: "pos"
     * @const
     */
    "pos": "pos",

    /**
     * value: "online"
     * @const
     */
    "online": "online"
};



export default SalePlan;

