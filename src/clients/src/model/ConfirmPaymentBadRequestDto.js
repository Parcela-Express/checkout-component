/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ConfirmPaymentBadRequestDto model module.
 * @module model/ConfirmPaymentBadRequestDto
 * @version 1.0
 */
class ConfirmPaymentBadRequestDto {
    /**
     * Constructs a new <code>ConfirmPaymentBadRequestDto</code>.
     * @alias module:model/ConfirmPaymentBadRequestDto
     * @param notFoundSales {Array.<String>} Vendas não existentes
     * @param alreadyConfirmedSales {Array.<String>} Vendas ja confirmadas
     * @param pendingSales {Array.<String>} Vendas pendentes de pagamento
     * @param invalidSales {Array.<String>} Vendas com status inválidos
     */
    constructor(notFoundSales, alreadyConfirmedSales, pendingSales, invalidSales) { 
        
        ConfirmPaymentBadRequestDto.initialize(this, notFoundSales, alreadyConfirmedSales, pendingSales, invalidSales);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, notFoundSales, alreadyConfirmedSales, pendingSales, invalidSales) { 
        obj['notFoundSales'] = notFoundSales;
        obj['alreadyConfirmedSales'] = alreadyConfirmedSales;
        obj['pendingSales'] = pendingSales;
        obj['invalidSales'] = invalidSales;
    }

    /**
     * Constructs a <code>ConfirmPaymentBadRequestDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConfirmPaymentBadRequestDto} obj Optional instance to populate.
     * @return {module:model/ConfirmPaymentBadRequestDto} The populated <code>ConfirmPaymentBadRequestDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConfirmPaymentBadRequestDto();

            if (data.hasOwnProperty('notFoundSales')) {
                obj['notFoundSales'] = ApiClient.convertToType(data['notFoundSales'], ['String']);
            }
            if (data.hasOwnProperty('alreadyConfirmedSales')) {
                obj['alreadyConfirmedSales'] = ApiClient.convertToType(data['alreadyConfirmedSales'], ['String']);
            }
            if (data.hasOwnProperty('pendingSales')) {
                obj['pendingSales'] = ApiClient.convertToType(data['pendingSales'], ['String']);
            }
            if (data.hasOwnProperty('invalidSales')) {
                obj['invalidSales'] = ApiClient.convertToType(data['invalidSales'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * Vendas não existentes
 * @member {Array.<String>} notFoundSales
 */
ConfirmPaymentBadRequestDto.prototype['notFoundSales'] = undefined;

/**
 * Vendas ja confirmadas
 * @member {Array.<String>} alreadyConfirmedSales
 */
ConfirmPaymentBadRequestDto.prototype['alreadyConfirmedSales'] = undefined;

/**
 * Vendas pendentes de pagamento
 * @member {Array.<String>} pendingSales
 */
ConfirmPaymentBadRequestDto.prototype['pendingSales'] = undefined;

/**
 * Vendas com status inválidos
 * @member {Array.<String>} invalidSales
 */
ConfirmPaymentBadRequestDto.prototype['invalidSales'] = undefined;






export default ConfirmPaymentBadRequestDto;

