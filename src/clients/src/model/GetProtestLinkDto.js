/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {GetLogoDto} from './GetLogoDto';
import {GetProtestLinkPayerDto} from './GetProtestLinkPayerDto';
import {GetProtestLinkSaleDto} from './GetProtestLinkSaleDto';
import {GetProtestLinkSellerDto} from './GetProtestLinkSellerDto';
import {GetProtestLinkUserDto} from './GetProtestLinkUserDto';
import {GetThemeDto} from './GetThemeDto';

/**
 * The GetProtestLinkDto model module.
 * @module model/GetProtestLinkDto
 * @version 1.0
 */
export class GetProtestLinkDto {
  /**
   * Constructs a new <code>GetProtestLinkDto</code>.
   * @alias module:model/GetProtestLinkDto
   * @class
   * @param id {String} 
   * @param amount {Number} 
   * @param fee {Number} 
   * @param description {String} 
   * @param url {String} 
   * @param email {String} 
   * @param token {String} 
   * @param payer {module:model/GetProtestLinkPayerDto} 
   * @param user {module:model/GetProtestLinkUserDto} 
   * @param status {module:model/GetProtestLinkDto.StatusEnum} 
   * @param formattedStatus {String} 
   * @param generatedByPayer {Boolean} 
   * @param formattedGeneratedByPayer {String} 
   * @param sale {module:model/GetProtestLinkSaleDto} 
   * @param seller {module:model/GetProtestLinkSellerDto} 
   * @param createdAt {String} 
   * @param updatedAt {String} 
   * @param expiresIn {String} 
   * @param preCapture {Boolean} 
   * @param logo {module:model/GetLogoDto} 
   * @param theme {module:model/GetThemeDto} 
   */
  constructor(id, amount, fee, description, url, email, token, payer, user, status, formattedStatus, generatedByPayer, formattedGeneratedByPayer, sale, seller, createdAt, updatedAt, expiresIn, preCapture, logo, theme) {
    this.id = id;
    this.amount = amount;
    this.fee = fee;
    this.description = description;
    this.url = url;
    this.email = email;
    this.token = token;
    this.payer = payer;
    this.user = user;
    this.status = status;
    this.formattedStatus = formattedStatus;
    this.generatedByPayer = generatedByPayer;
    this.formattedGeneratedByPayer = formattedGeneratedByPayer;
    this.sale = sale;
    this.seller = seller;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
    this.expiresIn = expiresIn;
    this.preCapture = preCapture;
    this.logo = logo;
    this.theme = theme;
  }

  /**
   * Constructs a <code>GetProtestLinkDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GetProtestLinkDto} obj Optional instance to populate.
   * @return {module:model/GetProtestLinkDto} The populated <code>GetProtestLinkDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new GetProtestLinkDto();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('amount'))
        obj.amount = ApiClient.convertToType(data['amount'], 'Number');
      if (data.hasOwnProperty('fee'))
        obj.fee = ApiClient.convertToType(data['fee'], 'Number');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('url'))
        obj.url = ApiClient.convertToType(data['url'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('token'))
        obj.token = ApiClient.convertToType(data['token'], 'String');
      if (data.hasOwnProperty('payer'))
        obj.payer = GetProtestLinkPayerDto.constructFromObject(data['payer']);
      if (data.hasOwnProperty('user'))
        obj.user = GetProtestLinkUserDto.constructFromObject(data['user']);
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('formatted_status'))
        obj.formattedStatus = ApiClient.convertToType(data['formatted_status'], 'String');
      if (data.hasOwnProperty('generated_by_payer'))
        obj.generatedByPayer = ApiClient.convertToType(data['generated_by_payer'], 'Boolean');
      if (data.hasOwnProperty('formatted_generated_by_payer'))
        obj.formattedGeneratedByPayer = ApiClient.convertToType(data['formatted_generated_by_payer'], 'String');
      if (data.hasOwnProperty('sale'))
        obj.sale = GetProtestLinkSaleDto.constructFromObject(data['sale']);
      if (data.hasOwnProperty('seller'))
        obj.seller = GetProtestLinkSellerDto.constructFromObject(data['seller']);
      if (data.hasOwnProperty('created_at'))
        obj.createdAt = ApiClient.convertToType(data['created_at'], 'String');
      if (data.hasOwnProperty('updated_at'))
        obj.updatedAt = ApiClient.convertToType(data['updated_at'], 'String');
      if (data.hasOwnProperty('expires_in'))
        obj.expiresIn = ApiClient.convertToType(data['expires_in'], 'String');
      if (data.hasOwnProperty('billet_payment_is_permitted'))
        obj.billetPaymentIsPermitted = ApiClient.convertToType(data['billet_payment_is_permitted'], 'Boolean');
      if (data.hasOwnProperty('qrcode_payment_is_permitted'))
        obj.qrcodePaymentIsPermitted = ApiClient.convertToType(data['qrcode_payment_is_permitted'], 'Boolean');
      if (data.hasOwnProperty('card_payment_is_permitted'))
        obj.cardPaymentIsPermitted = ApiClient.convertToType(data['card_payment_is_permitted'], 'Boolean');
      if (data.hasOwnProperty('qrcode_url'))
        obj.qrcodeUrl = ApiClient.convertToType(data['qrcode_url'], 'String');
      if (data.hasOwnProperty('payment_methods'))
        obj.paymentMethods = ApiClient.convertToType(data['payment_methods'], ['String']);
      if (data.hasOwnProperty('pre_capture'))
        obj.preCapture = ApiClient.convertToType(data['pre_capture'], 'Boolean');
      if (data.hasOwnProperty('logo'))
        obj.logo = GetLogoDto.constructFromObject(data['logo']);
      if (data.hasOwnProperty('theme'))
        obj.theme = GetThemeDto.constructFromObject(data['theme']);
    }
    return obj;
  }
}

/**
 * @member {String} id
 */
GetProtestLinkDto.prototype.id = undefined;

/**
 * @member {Number} amount
 */
GetProtestLinkDto.prototype.amount = undefined;

/**
 * @member {Number} fee
 */
GetProtestLinkDto.prototype.fee = undefined;

/**
 * @member {String} description
 */
GetProtestLinkDto.prototype.description = undefined;

/**
 * @member {String} url
 */
GetProtestLinkDto.prototype.url = undefined;

/**
 * @member {String} email
 */
GetProtestLinkDto.prototype.email = undefined;

/**
 * @member {String} token
 */
GetProtestLinkDto.prototype.token = undefined;

/**
 * @member {module:model/GetProtestLinkPayerDto} payer
 */
GetProtestLinkDto.prototype.payer = undefined;

/**
 * @member {module:model/GetProtestLinkUserDto} user
 */
GetProtestLinkDto.prototype.user = undefined;

/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
GetProtestLinkDto.StatusEnum = {
  /**
   * value: "active"
   * @const
   */
  active: "active",

  /**
   * value: "pending_capture"
   * @const
   */
  pendingCapture: "pending_capture",

  /**
   * value: "expired"
   * @const
   */
  expired: "expired",

  /**
   * value: "canceled"
   * @const
   */
  canceled: "canceled",

  /**
   * value: "paid"
   * @const
   */
  paid: "paid"
};
/**
 * @member {module:model/GetProtestLinkDto.StatusEnum} status
 */
GetProtestLinkDto.prototype.status = undefined;

/**
 * @member {String} formattedStatus
 */
GetProtestLinkDto.prototype.formattedStatus = undefined;

/**
 * @member {Boolean} generatedByPayer
 */
GetProtestLinkDto.prototype.generatedByPayer = undefined;

/**
 * @member {String} formattedGeneratedByPayer
 */
GetProtestLinkDto.prototype.formattedGeneratedByPayer = undefined;

/**
 * @member {module:model/GetProtestLinkSaleDto} sale
 */
GetProtestLinkDto.prototype.sale = undefined;

/**
 * @member {module:model/GetProtestLinkSellerDto} seller
 */
GetProtestLinkDto.prototype.seller = undefined;

/**
 * @member {String} createdAt
 */
GetProtestLinkDto.prototype.createdAt = undefined;

/**
 * @member {String} updatedAt
 */
GetProtestLinkDto.prototype.updatedAt = undefined;

/**
 * @member {String} expiresIn
 */
GetProtestLinkDto.prototype.expiresIn = undefined;

/**
 * @member {Boolean} billetPaymentIsPermitted
 */
GetProtestLinkDto.prototype.billetPaymentIsPermitted = undefined;

/**
 * @member {Boolean} qrcodePaymentIsPermitted
 */
GetProtestLinkDto.prototype.qrcodePaymentIsPermitted = undefined;

/**
 * @member {Boolean} cardPaymentIsPermitted
 */
GetProtestLinkDto.prototype.cardPaymentIsPermitted = undefined;

/**
 * @member {String} qrcodeUrl
 */
GetProtestLinkDto.prototype.qrcodeUrl = undefined;

/**
 * @member {Array.<String>} paymentMethods
 */
GetProtestLinkDto.prototype.paymentMethods = undefined;

/**
 * @member {Boolean} preCapture
 */
GetProtestLinkDto.prototype.preCapture = undefined;

/**
 * @member {module:model/GetLogoDto} logo
 */
GetProtestLinkDto.prototype.logo = undefined;

/**
 * @member {module:model/GetThemeDto} theme
 */
GetProtestLinkDto.prototype.theme = undefined;

