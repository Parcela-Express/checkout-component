/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Celcoin from './Celcoin';
import GetBilletDto from './GetBilletDto';
import GetSalePayerDto from './GetSalePayerDto';
import GetSalePlanPaymentTypeDto from './GetSalePlanPaymentTypeDto';

/**
 * The GetSellerSaleDto model module.
 * @module model/GetSellerSaleDto
 * @version 1.0
 */
class GetSellerSaleDto {
    /**
     * Constructs a new <code>GetSellerSaleDto</code>.
     * @alias module:model/GetSellerSaleDto
     * @param id {String} 
     * @param description {String} 
     * @param created_at {String} 
     * @param original_amount {Number} 
     * @param type {module:model/GetSellerSaleDto.TypeEnum} 
     * @param payment_type {module:model/GetSalePlanPaymentTypeDto} 
     * @param payer {module:model/GetSalePayerDto} 
     * @param billet {module:model/GetBilletDto} 
     * @param celcoin {module:model/Celcoin} 
     */
    constructor(id, description, created_at, original_amount, type, payment_type, payer, billet, celcoin) { 
        
        GetSellerSaleDto.initialize(this, id, description, created_at, original_amount, type, payment_type, payer, billet, celcoin);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, description, created_at, original_amount, type, payment_type, payer, billet, celcoin) { 
        obj['id'] = id;
        obj['description'] = description;
        obj['created_at'] = created_at;
        obj['original_amount'] = original_amount;
        obj['type'] = type;
        obj['payment_type'] = payment_type;
        obj['payer'] = payer;
        obj['billet'] = billet;
        obj['celcoin'] = celcoin;
    }

    /**
     * Constructs a <code>GetSellerSaleDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSellerSaleDto} obj Optional instance to populate.
     * @return {module:model/GetSellerSaleDto} The populated <code>GetSellerSaleDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSellerSaleDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('original_amount')) {
                obj['original_amount'] = ApiClient.convertToType(data['original_amount'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('payment_type')) {
                obj['payment_type'] = GetSalePlanPaymentTypeDto.constructFromObject(data['payment_type']);
            }
            if (data.hasOwnProperty('payer')) {
                obj['payer'] = GetSalePayerDto.constructFromObject(data['payer']);
            }
            if (data.hasOwnProperty('billet')) {
                obj['billet'] = GetBilletDto.constructFromObject(data['billet']);
            }
            if (data.hasOwnProperty('celcoin')) {
                obj['celcoin'] = Celcoin.constructFromObject(data['celcoin']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
GetSellerSaleDto.prototype['id'] = undefined;

/**
 * @member {String} description
 */
GetSellerSaleDto.prototype['description'] = undefined;

/**
 * @member {String} created_at
 */
GetSellerSaleDto.prototype['created_at'] = undefined;

/**
 * @member {Number} original_amount
 */
GetSellerSaleDto.prototype['original_amount'] = undefined;

/**
 * @member {module:model/GetSellerSaleDto.TypeEnum} type
 */
GetSellerSaleDto.prototype['type'] = undefined;

/**
 * @member {module:model/GetSalePlanPaymentTypeDto} payment_type
 */
GetSellerSaleDto.prototype['payment_type'] = undefined;

/**
 * @member {module:model/GetSalePayerDto} payer
 */
GetSellerSaleDto.prototype['payer'] = undefined;

/**
 * @member {module:model/GetBilletDto} billet
 */
GetSellerSaleDto.prototype['billet'] = undefined;

/**
 * @member {module:model/Celcoin} celcoin
 */
GetSellerSaleDto.prototype['celcoin'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GetSellerSaleDto['TypeEnum'] = {

    /**
     * value: "boleto"
     * @const
     */
    "boleto": "boleto",

    /**
     * value: "pos"
     * @const
     */
    "pos": "pos",

    /**
     * value: "payment_link"
     * @const
     */
    "payment_link": "payment_link",

    /**
     * value: "protest_link"
     * @const
     */
    "protest_link": "protest_link",

    /**
     * value: "online"
     * @const
     */
    "online": "online",

    /**
     * value: "auto_generate_payment_link"
     * @const
     */
    "auto_generate_payment_link": "auto_generate_payment_link",

    /**
     * value: "auto_generate_protest_link"
     * @const
     */
    "auto_generate_protest_link": "auto_generate_protest_link",

    /**
     * value: "billet_code"
     * @const
     */
    "billet_code": "billet_code",

    /**
     * value: "bill_payment"
     * @const
     */
    "bill_payment": "bill_payment"
};



export default GetSellerSaleDto;

