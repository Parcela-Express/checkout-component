/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetAcquirerDto from './GetAcquirerDto';
import GetCostPlanDto from './GetCostPlanDto';
import GetMerchantDto from './GetMerchantDto';
import GetSalePlanPaymentTypeDto from './GetSalePlanPaymentTypeDto';
import GetSettlementPlanDto from './GetSettlementPlanDto';

/**
 * The GetSalePlanDto model module.
 * @module model/GetSalePlanDto
 * @version 1.0
 */
class GetSalePlanDto {
    /**
     * Constructs a new <code>GetSalePlanDto</code>.
     * @alias module:model/GetSalePlanDto
     * @param id {String} 
     * @param name {String} 
     * @param description {String} 
     * @param payment_types {Array.<module:model/GetSalePlanPaymentTypeDto>} 
     * @param type {module:model/GetSalePlanDto.TypeEnum} 
     * @param merchant {module:model/GetMerchantDto} 
     * @param acquirer {module:model/GetAcquirerDto} 
     * @param settlement_plan {module:model/GetSettlementPlanDto} 
     * @param cost_plan {module:model/GetCostPlanDto} 
     * @param payment_method {String} 
     */
    constructor(id, name, description, payment_types, type, merchant, acquirer, settlement_plan, cost_plan, payment_method) { 
        
        GetSalePlanDto.initialize(this, id, name, description, payment_types, type, merchant, acquirer, settlement_plan, cost_plan, payment_method);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, description, payment_types, type, merchant, acquirer, settlement_plan, cost_plan, payment_method) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['description'] = description;
        obj['payment_types'] = payment_types;
        obj['type'] = type;
        obj['merchant'] = merchant;
        obj['acquirer'] = acquirer;
        obj['settlement_plan'] = settlement_plan;
        obj['cost_plan'] = cost_plan;
        obj['payment_method'] = payment_method;
    }

    /**
     * Constructs a <code>GetSalePlanDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSalePlanDto} obj Optional instance to populate.
     * @return {module:model/GetSalePlanDto} The populated <code>GetSalePlanDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSalePlanDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('payment_types')) {
                obj['payment_types'] = ApiClient.convertToType(data['payment_types'], [GetSalePlanPaymentTypeDto]);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('merchant')) {
                obj['merchant'] = GetMerchantDto.constructFromObject(data['merchant']);
            }
            if (data.hasOwnProperty('acquirer')) {
                obj['acquirer'] = GetAcquirerDto.constructFromObject(data['acquirer']);
            }
            if (data.hasOwnProperty('settlement_plan')) {
                obj['settlement_plan'] = GetSettlementPlanDto.constructFromObject(data['settlement_plan']);
            }
            if (data.hasOwnProperty('cost_plan')) {
                obj['cost_plan'] = GetCostPlanDto.constructFromObject(data['cost_plan']);
            }
            if (data.hasOwnProperty('payment_method')) {
                obj['payment_method'] = ApiClient.convertToType(data['payment_method'], 'String');
            }
            if (data.hasOwnProperty('risk_value')) {
                obj['risk_value'] = ApiClient.convertToType(data['risk_value'], 'Number');
            }
            if (data.hasOwnProperty('inactive')) {
                obj['inactive'] = ApiClient.convertToType(data['inactive'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
GetSalePlanDto.prototype['id'] = undefined;

/**
 * @member {String} name
 */
GetSalePlanDto.prototype['name'] = undefined;

/**
 * @member {String} description
 */
GetSalePlanDto.prototype['description'] = undefined;

/**
 * @member {Array.<module:model/GetSalePlanPaymentTypeDto>} payment_types
 */
GetSalePlanDto.prototype['payment_types'] = undefined;

/**
 * @member {module:model/GetSalePlanDto.TypeEnum} type
 */
GetSalePlanDto.prototype['type'] = undefined;

/**
 * @member {module:model/GetMerchantDto} merchant
 */
GetSalePlanDto.prototype['merchant'] = undefined;

/**
 * @member {module:model/GetAcquirerDto} acquirer
 */
GetSalePlanDto.prototype['acquirer'] = undefined;

/**
 * @member {module:model/GetSettlementPlanDto} settlement_plan
 */
GetSalePlanDto.prototype['settlement_plan'] = undefined;

/**
 * @member {module:model/GetCostPlanDto} cost_plan
 */
GetSalePlanDto.prototype['cost_plan'] = undefined;

/**
 * @member {String} payment_method
 */
GetSalePlanDto.prototype['payment_method'] = undefined;

/**
 * @member {Number} risk_value
 */
GetSalePlanDto.prototype['risk_value'] = undefined;

/**
 * @member {Boolean} inactive
 */
GetSalePlanDto.prototype['inactive'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GetSalePlanDto['TypeEnum'] = {

    /**
     * value: "markup"
     * @const
     */
    "markup": "markup",

    /**
     * value: "spread"
     * @const
     */
    "spread": "spread",

    /**
     * value: "split"
     * @const
     */
    "split": "split"
};



export default GetSalePlanDto;

