/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ParcelaExpressApi);
  }
}(this, function(expect, ParcelaExpressApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GetBilletDataDto', function() {
      beforeEach(function() {
        instance = new ParcelaExpressApi.GetBilletDataDto();
      });

      it('should create an instance of GetBilletDataDto', function() {
        // TODO: update the code to test GetBilletDataDto
        expect(instance).to.be.a(ParcelaExpressApi.GetBilletDataDto);
      });

      it('should have the property banco (base name: "banco")', function() {
        // TODO: update the code to test the property banco
        expect(instance).to.have.property('banco');
        // expect(instance.banco).to.be(expectedValueLiteral);
      });

      it('should have the property dataEmissao (base name: "data_emissao")', function() {
        // TODO: update the code to test the property dataEmissao
        expect(instance).to.have.property('dataEmissao');
        // expect(instance.dataEmissao).to.be(expectedValueLiteral);
      });

      it('should have the property dataVencimento (base name: "data_vencimento")', function() {
        // TODO: update the code to test the property dataVencimento
        expect(instance).to.have.property('dataVencimento');
        // expect(instance.dataVencimento).to.be(expectedValueLiteral);
      });

      it('should have the property valor (base name: "valor")', function() {
        // TODO: update the code to test the property valor
        expect(instance).to.have.property('valor');
        // expect(instance.valor).to.be(expectedValueLiteral);
      });

      it('should have the property nossoNumero (base name: "nosso_numero")', function() {
        // TODO: update the code to test the property nossoNumero
        expect(instance).to.have.property('nossoNumero');
        // expect(instance.nossoNumero).to.be(expectedValueLiteral);
      });

      it('should have the property instrucoes (base name: "instrucoes")', function() {
        // TODO: update the code to test the property instrucoes
        expect(instance).to.have.property('instrucoes');
        // expect(instance.instrucoes).to.be(expectedValueLiteral);
      });

      it('should have the property agencia (base name: "agencia")', function() {
        // TODO: update the code to test the property agencia
        expect(instance).to.have.property('agencia');
        // expect(instance.agencia).to.be(expectedValueLiteral);
      });

      it('should have the property conta (base name: "conta")', function() {
        // TODO: update the code to test the property conta
        expect(instance).to.have.property('conta');
        // expect(instance.conta).to.be(expectedValueLiteral);
      });

      it('should have the property carteira (base name: "carteira")', function() {
        // TODO: update the code to test the property carteira
        expect(instance).to.have.property('carteira');
        // expect(instance.carteira).to.be(expectedValueLiteral);
      });

      it('should have the property pagador (base name: "pagador")', function() {
        // TODO: update the code to test the property pagador
        expect(instance).to.have.property('pagador');
        // expect(instance.pagador).to.be(expectedValueLiteral);
      });

      it('should have the property cedente (base name: "cedente")', function() {
        // TODO: update the code to test the property cedente
        expect(instance).to.have.property('cedente');
        // expect(instance.cedente).to.be(expectedValueLiteral);
      });

      it('should have the property cedenteCnpj (base name: "cedente_cnpj")', function() {
        // TODO: update the code to test the property cedenteCnpj
        expect(instance).to.have.property('cedenteCnpj');
        // expect(instance.cedenteCnpj).to.be(expectedValueLiteral);
      });

      it('should have the property codigoCedente (base name: "codigo_cedente")', function() {
        // TODO: update the code to test the property codigoCedente
        expect(instance).to.have.property('codigoCedente');
        // expect(instance.codigoCedente).to.be(expectedValueLiteral);
      });

    });
  });

}));
