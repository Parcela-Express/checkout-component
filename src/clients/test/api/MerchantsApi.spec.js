/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ParcelaExpressApi);
  }
}(this, function(expect, ParcelaExpressApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ParcelaExpressApi.MerchantsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MerchantsApi', function() {
    describe('createMerchant', function() {
      it('should call createMerchant successfully', function(done) {
        //uncomment below and update the code to test createMerchant
        //instance.createMerchant(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createMerchantUser', function() {
      it('should call createMerchantUser successfully', function(done) {
        //uncomment below and update the code to test createMerchantUser
        //instance.createMerchantUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('editMerchant', function() {
      it('should call editMerchant successfully', function(done) {
        //uncomment below and update the code to test editMerchant
        //instance.editMerchant(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMerchant', function() {
      it('should call getMerchant successfully', function(done) {
        //uncomment below and update the code to test getMerchant
        //instance.getMerchant(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAllMerchantUsers', function() {
      it('should call listAllMerchantUsers successfully', function(done) {
        //uncomment below and update the code to test listAllMerchantUsers
        //instance.listAllMerchantUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMerchantSalesPlans', function() {
      it('should call listMerchantSalesPlans successfully', function(done) {
        //uncomment below and update the code to test listMerchantSalesPlans
        //instance.listMerchantSalesPlans(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMerchantUsers', function() {
      it('should call listMerchantUsers successfully', function(done) {
        //uncomment below and update the code to test listMerchantUsers
        //instance.listMerchantUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listMerchants', function() {
      it('should call listMerchants successfully', function(done) {
        //uncomment below and update the code to test listMerchants
        //instance.listMerchants(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMerchantUser', function() {
      it('should call updateMerchantUser successfully', function(done) {
        //uncomment below and update the code to test updateMerchantUser
        //instance.updateMerchantUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
