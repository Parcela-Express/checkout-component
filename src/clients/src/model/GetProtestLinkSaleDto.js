/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetProtestLinkSaleDto model module.
 * @module model/GetProtestLinkSaleDto
 * @version 1.0
 */
class GetProtestLinkSaleDto {
    /**
     * Constructs a new <code>GetProtestLinkSaleDto</code>.
     * @alias module:model/GetProtestLinkSaleDto
     * @param id {String} 
     * @param description {String} 
     * @param created_at {String} 
     * @param updated_at {String} 
     * @param original_amount {Number} 
     * @param amount {Number} 
     * @param fee {Number} 
     * @param type {module:model/GetProtestLinkSaleDto.TypeEnum} 
     * @param form_payment {module:model/GetProtestLinkSaleDto.FormPaymentEnum} 
     * @param formatted_form_payment {String} 
     * @param status {module:model/GetProtestLinkSaleDto.StatusEnum} 
     */
    constructor(id, description, created_at, updated_at, original_amount, amount, fee, type, form_payment, formatted_form_payment, status) { 
        
        GetProtestLinkSaleDto.initialize(this, id, description, created_at, updated_at, original_amount, amount, fee, type, form_payment, formatted_form_payment, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, description, created_at, updated_at, original_amount, amount, fee, type, form_payment, formatted_form_payment, status) { 
        obj['id'] = id;
        obj['description'] = description;
        obj['created_at'] = created_at;
        obj['updated_at'] = updated_at;
        obj['original_amount'] = original_amount;
        obj['amount'] = amount;
        obj['fee'] = fee;
        obj['type'] = type;
        obj['form_payment'] = form_payment;
        obj['formatted_form_payment'] = formatted_form_payment;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>GetProtestLinkSaleDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetProtestLinkSaleDto} obj Optional instance to populate.
     * @return {module:model/GetProtestLinkSaleDto} The populated <code>GetProtestLinkSaleDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetProtestLinkSaleDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('original_amount')) {
                obj['original_amount'] = ApiClient.convertToType(data['original_amount'], 'Number');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('fee')) {
                obj['fee'] = ApiClient.convertToType(data['fee'], 'Number');
            }
            if (data.hasOwnProperty('absorb_costs')) {
                obj['absorb_costs'] = ApiClient.convertToType(data['absorb_costs'], ['String']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('form_payment')) {
                obj['form_payment'] = ApiClient.convertToType(data['form_payment'], 'String');
            }
            if (data.hasOwnProperty('formatted_form_payment')) {
                obj['formatted_form_payment'] = ApiClient.convertToType(data['formatted_form_payment'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
GetProtestLinkSaleDto.prototype['id'] = undefined;

/**
 * @member {String} description
 */
GetProtestLinkSaleDto.prototype['description'] = undefined;

/**
 * @member {String} created_at
 */
GetProtestLinkSaleDto.prototype['created_at'] = undefined;

/**
 * @member {String} updated_at
 */
GetProtestLinkSaleDto.prototype['updated_at'] = undefined;

/**
 * @member {Number} original_amount
 */
GetProtestLinkSaleDto.prototype['original_amount'] = undefined;

/**
 * @member {Number} amount
 */
GetProtestLinkSaleDto.prototype['amount'] = undefined;

/**
 * @member {Number} fee
 */
GetProtestLinkSaleDto.prototype['fee'] = undefined;

/**
 * @member {Array.<String>} absorb_costs
 */
GetProtestLinkSaleDto.prototype['absorb_costs'] = undefined;

/**
 * @member {module:model/GetProtestLinkSaleDto.TypeEnum} type
 */
GetProtestLinkSaleDto.prototype['type'] = undefined;

/**
 * @member {module:model/GetProtestLinkSaleDto.FormPaymentEnum} form_payment
 */
GetProtestLinkSaleDto.prototype['form_payment'] = undefined;

/**
 * @member {String} formatted_form_payment
 */
GetProtestLinkSaleDto.prototype['formatted_form_payment'] = undefined;

/**
 * @member {module:model/GetProtestLinkSaleDto.StatusEnum} status
 */
GetProtestLinkSaleDto.prototype['status'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GetProtestLinkSaleDto['TypeEnum'] = {

    /**
     * value: "boleto"
     * @const
     */
    "boleto": "boleto",

    /**
     * value: "pos"
     * @const
     */
    "pos": "pos",

    /**
     * value: "payment_link"
     * @const
     */
    "payment_link": "payment_link",

    /**
     * value: "protest_link"
     * @const
     */
    "protest_link": "protest_link",

    /**
     * value: "online"
     * @const
     */
    "online": "online",

    /**
     * value: "auto_generate_payment_link"
     * @const
     */
    "auto_generate_payment_link": "auto_generate_payment_link",

    /**
     * value: "auto_generate_protest_link"
     * @const
     */
    "auto_generate_protest_link": "auto_generate_protest_link",

    /**
     * value: "billet_code"
     * @const
     */
    "billet_code": "billet_code",

    /**
     * value: "bill_payment"
     * @const
     */
    "bill_payment": "bill_payment"
};


/**
 * Allowed values for the <code>form_payment</code> property.
 * @enum {String}
 * @readonly
 */
GetProtestLinkSaleDto['FormPaymentEnum'] = {

    /**
     * value: "credit"
     * @const
     */
    "credit": "credit",

    /**
     * value: "debit"
     * @const
     */
    "debit": "debit",

    /**
     * value: "billet"
     * @const
     */
    "billet": "billet",

    /**
     * value: "pix"
     * @const
     */
    "pix": "pix",

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "pix_pos"
     * @const
     */
    "pix_pos": "pix_pos"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
GetProtestLinkSaleDto['StatusEnum'] = {

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "pending_capture"
     * @const
     */
    "pending_capture": "pending_capture",

    /**
     * value: "in_progress_capture"
     * @const
     */
    "in_progress_capture": "in_progress_capture",

    /**
     * value: "succeeded"
     * @const
     */
    "succeeded": "succeeded",

    /**
     * value: "canceled"
     * @const
     */
    "canceled": "canceled",

    /**
     * value: "pending_cancel"
     * @const
     */
    "pending_cancel": "pending_cancel",

    /**
     * value: "abort"
     * @const
     */
    "abort": "abort",

    /**
     * value: "failed"
     * @const
     */
    "failed": "failed",

    /**
     * value: "waiting_confirmation"
     * @const
     */
    "waiting_confirmation": "waiting_confirmation",

    /**
     * value: "expired"
     * @const
     */
    "expired": "expired",

    /**
     * value: "waiting_cashIn"
     * @const
     */
    "waiting_cashIn": "waiting_cashIn"
};



export default GetProtestLinkSaleDto;

