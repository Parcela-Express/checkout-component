/**
 * Parcela Express API
 * Parcela Express API
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetSimulationDto from '../model/GetSimulationDto';
import GetSimulationPayloadDto from '../model/GetSimulationPayloadDto';

/**
* Simulation service.
* @module api/SimulationApi
* @version 1.0
*/
export default class SimulationApi {

    /**
    * Constructs a new SimulationApi. 
    * @alias module:api/SimulationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the listCelcoinSimulation operation.
     * @callback module:api/SimulationApi~listCelcoinSimulationCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetSimulationDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Listar simulação de parcelas de Pagamento de Contas
     * @param {String} seller_id 
     * @param {Number} amount_cents 
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.is_pos 
     * @param {module:api/SimulationApi~listCelcoinSimulationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetSimulationDto>}
     */
    listCelcoinSimulation(seller_id, amount_cents, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'seller_id' is set
      if (seller_id === undefined || seller_id === null) {
        throw new Error("Missing the required parameter 'seller_id' when calling listCelcoinSimulation");
      }
      // verify the required parameter 'amount_cents' is set
      if (amount_cents === undefined || amount_cents === null) {
        throw new Error("Missing the required parameter 'amount_cents' when calling listCelcoinSimulation");
      }

      let pathParams = {
        'seller_id': seller_id
      };
      let queryParams = {
        'amount_cents': amount_cents,
        'is_pos': opts['is_pos']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetSimulationDto];
      return this.apiClient.callApi(
        '/v1/simulation/sellers/{seller_id}/celcoin', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listSimulation operation.
     * @callback module:api/SimulationApi~listSimulationCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetSimulationDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Listar simulação de parcelas
     * @param {String} seller_id 
     * @param {Number} amount_cents 
     * @param {Object} opts Optional parameters
     * @param {Number} opts.fee 
     * @param {Boolean} opts.is_pos 
     * @param {module:api/SimulationApi~listSimulationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetSimulationDto>}
     */
    listSimulation(seller_id, amount_cents, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'seller_id' is set
      if (seller_id === undefined || seller_id === null) {
        throw new Error("Missing the required parameter 'seller_id' when calling listSimulation");
      }
      // verify the required parameter 'amount_cents' is set
      if (amount_cents === undefined || amount_cents === null) {
        throw new Error("Missing the required parameter 'amount_cents' when calling listSimulation");
      }

      let pathParams = {
        'seller_id': seller_id
      };
      let queryParams = {
        'amount_cents': amount_cents,
        'fee': opts['fee'],
        'is_pos': opts['is_pos']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [GetSimulationDto];
      return this.apiClient.callApi(
        '/v1/simulation/sellers/{seller_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listSimulationsFee operation.
     * @callback module:api/SimulationApi~listSimulationsFeeCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GetSimulationDto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Listar simulação de parcelas com ou sem split mostrando taxas
     * @param {String} seller_id 
     * @param {module:model/GetSimulationPayloadDto} GetSimulationPayloadDto 
     * @param {module:api/SimulationApi~listSimulationsFeeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GetSimulationDto>}
     */
    listSimulationsFee(seller_id, GetSimulationPayloadDto, callback) {
      let postBody = GetSimulationPayloadDto;
      // verify the required parameter 'seller_id' is set
      if (seller_id === undefined || seller_id === null) {
        throw new Error("Missing the required parameter 'seller_id' when calling listSimulationsFee");
      }
      // verify the required parameter 'GetSimulationPayloadDto' is set
      if (GetSimulationPayloadDto === undefined || GetSimulationPayloadDto === null) {
        throw new Error("Missing the required parameter 'GetSimulationPayloadDto' when calling listSimulationsFee");
      }

      let pathParams = {
        'seller_id': seller_id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = [GetSimulationDto];
      return this.apiClient.callApi(
        '/v1/simulation/sellers/{seller_id}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
