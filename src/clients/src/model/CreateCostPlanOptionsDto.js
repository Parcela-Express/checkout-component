/*
 * Parcela Express API
 * Parcela Express API
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.30
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The CreateCostPlanOptionsDto model module.
 * @module model/CreateCostPlanOptionsDto
 * @version 1.0
 */
export class CreateCostPlanOptionsDto {
  /**
   * Constructs a new <code>CreateCostPlanOptionsDto</code>.
   * @alias module:model/CreateCostPlanOptionsDto
   * @class
   * @param fixedAmount {Number} 
   * @param bankFixedAmount {Number} 
   * @param description {String} 
   * @param type {module:model/CreateCostPlanOptionsDto.TypeEnum} 
   * @param exchangeFeeType {module:model/CreateCostPlanOptionsDto.ExchangeFeeTypeEnum} 
   * @param exchangeFee {Number} 
   */
  constructor(fixedAmount, bankFixedAmount, description, type, exchangeFeeType, exchangeFee) {
    this.fixedAmount = fixedAmount;
    this.bankFixedAmount = bankFixedAmount;
    this.description = description;
    this.type = type;
    this.exchangeFeeType = exchangeFeeType;
    this.exchangeFee = exchangeFee;
  }

  /**
   * Constructs a <code>CreateCostPlanOptionsDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CreateCostPlanOptionsDto} obj Optional instance to populate.
   * @return {module:model/CreateCostPlanOptionsDto} The populated <code>CreateCostPlanOptionsDto</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CreateCostPlanOptionsDto();
      if (data.hasOwnProperty('fixed_amount'))
        obj.fixedAmount = ApiClient.convertToType(data['fixed_amount'], 'Number');
      if (data.hasOwnProperty('bank_fixed_amount'))
        obj.bankFixedAmount = ApiClient.convertToType(data['bank_fixed_amount'], 'Number');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('type_status'))
        obj.typeStatus = ApiClient.convertToType(data['type_status'], 'String');
      if (data.hasOwnProperty('brand'))
        obj.brand = ApiClient.convertToType(data['brand'], 'String');
      if (data.hasOwnProperty('brand_fee'))
        obj.brandFee = ApiClient.convertToType(data['brand_fee'], 'Number');
      if (data.hasOwnProperty('brand_fee_type'))
        obj.brandFeeType = ApiClient.convertToType(data['brand_fee_type'], 'String');
      if (data.hasOwnProperty('installments'))
        obj.installments = ApiClient.convertToType(data['installments'], 'Number');
      if (data.hasOwnProperty('exchange_fee_type'))
        obj.exchangeFeeType = ApiClient.convertToType(data['exchange_fee_type'], 'String');
      if (data.hasOwnProperty('exchange_fee'))
        obj.exchangeFee = ApiClient.convertToType(data['exchange_fee'], 'Number');
      if (data.hasOwnProperty('anticipation_fee_type'))
        obj.anticipationFeeType = ApiClient.convertToType(data['anticipation_fee_type'], 'String');
      if (data.hasOwnProperty('anticipation_fee'))
        obj.anticipationFee = ApiClient.convertToType(data['anticipation_fee'], 'Number');
      if (data.hasOwnProperty('markup_fee_type'))
        obj.markupFeeType = ApiClient.convertToType(data['markup_fee_type'], 'String');
      if (data.hasOwnProperty('markup_fee'))
        obj.markupFee = ApiClient.convertToType(data['markup_fee'], 'Number');
      if (data.hasOwnProperty('is_cap'))
        obj.isCap = ApiClient.convertToType(data['is_cap'], 'Boolean');
      if (data.hasOwnProperty('exchange_cap'))
        obj.exchangeCap = ApiClient.convertToType(data['exchange_cap'], 'Number');
    }
    return obj;
  }
}

/**
 * @member {Number} fixedAmount
 */
CreateCostPlanOptionsDto.prototype.fixedAmount = undefined;

/**
 * @member {Number} bankFixedAmount
 */
CreateCostPlanOptionsDto.prototype.bankFixedAmount = undefined;

/**
 * @member {String} description
 */
CreateCostPlanOptionsDto.prototype.description = undefined;

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CreateCostPlanOptionsDto.TypeEnum = {
  /**
   * value: "credit"
   * @const
   */
  credit: "credit",

  /**
   * value: "debit"
   * @const
   */
  debit: "debit",

  /**
   * value: "pix"
   * @const
   */
  pix: "pix",

  /**
   * value: "billet"
   * @const
   */
  billet: "billet"
};
/**
 * @member {module:model/CreateCostPlanOptionsDto.TypeEnum} type
 */
CreateCostPlanOptionsDto.prototype.type = undefined;

/**
 * Allowed values for the <code>typeStatus</code> property.
 * @enum {String}
 * @readonly
 */
CreateCostPlanOptionsDto.TypeStatusEnum = {
  /**
   * value: "pending"
   * @const
   */
  pending: "pending",

  /**
   * value: "paid"
   * @const
   */
  paid: "paid"
};
/**
 * @member {module:model/CreateCostPlanOptionsDto.TypeStatusEnum} typeStatus
 */
CreateCostPlanOptionsDto.prototype.typeStatus = undefined;

/**
 * Allowed values for the <code>brand</code> property.
 * @enum {String}
 * @readonly
 */
CreateCostPlanOptionsDto.BrandEnum = {
  /**
   * value: "visa"
   * @const
   */
  visa: "visa",

  /**
   * value: "elo"
   * @const
   */
  elo: "elo",

  /**
   * value: "mc"
   * @const
   */
  mc: "mc",

  /**
   * value: "amex"
   * @const
   */
  amex: "amex",

  /**
   * value: "hipercard"
   * @const
   */
  hipercard: "hipercard",

  /**
   * value: "default"
   * @const
   */
  _default: "default"
};
/**
 * @member {module:model/CreateCostPlanOptionsDto.BrandEnum} brand
 */
CreateCostPlanOptionsDto.prototype.brand = undefined;

/**
 * @member {Number} brandFee
 */
CreateCostPlanOptionsDto.prototype.brandFee = undefined;

/**
 * Allowed values for the <code>brandFeeType</code> property.
 * @enum {String}
 * @readonly
 */
CreateCostPlanOptionsDto.BrandFeeTypeEnum = {
  /**
   * value: "fixed"
   * @const
   */
  fixed: "fixed",

  /**
   * value: "percent"
   * @const
   */
  percent: "percent"
};
/**
 * @member {module:model/CreateCostPlanOptionsDto.BrandFeeTypeEnum} brandFeeType
 */
CreateCostPlanOptionsDto.prototype.brandFeeType = undefined;

/**
 * @member {Number} installments
 */
CreateCostPlanOptionsDto.prototype.installments = undefined;

/**
 * Allowed values for the <code>exchangeFeeType</code> property.
 * @enum {String}
 * @readonly
 */
CreateCostPlanOptionsDto.ExchangeFeeTypeEnum = {
  /**
   * value: "fixed"
   * @const
   */
  fixed: "fixed",

  /**
   * value: "percent"
   * @const
   */
  percent: "percent"
};
/**
 * @member {module:model/CreateCostPlanOptionsDto.ExchangeFeeTypeEnum} exchangeFeeType
 */
CreateCostPlanOptionsDto.prototype.exchangeFeeType = undefined;

/**
 * @member {Number} exchangeFee
 */
CreateCostPlanOptionsDto.prototype.exchangeFee = undefined;

/**
 * Allowed values for the <code>anticipationFeeType</code> property.
 * @enum {String}
 * @readonly
 */
CreateCostPlanOptionsDto.AnticipationFeeTypeEnum = {
  /**
   * value: "fixed"
   * @const
   */
  fixed: "fixed",

  /**
   * value: "percent"
   * @const
   */
  percent: "percent"
};
/**
 * @member {module:model/CreateCostPlanOptionsDto.AnticipationFeeTypeEnum} anticipationFeeType
 */
CreateCostPlanOptionsDto.prototype.anticipationFeeType = undefined;

/**
 * @member {Number} anticipationFee
 */
CreateCostPlanOptionsDto.prototype.anticipationFee = undefined;

/**
 * Allowed values for the <code>markupFeeType</code> property.
 * @enum {String}
 * @readonly
 */
CreateCostPlanOptionsDto.MarkupFeeTypeEnum = {
  /**
   * value: "fixed"
   * @const
   */
  fixed: "fixed",

  /**
   * value: "percent"
   * @const
   */
  percent: "percent"
};
/**
 * @member {module:model/CreateCostPlanOptionsDto.MarkupFeeTypeEnum} markupFeeType
 */
CreateCostPlanOptionsDto.prototype.markupFeeType = undefined;

/**
 * @member {Number} markupFee
 */
CreateCostPlanOptionsDto.prototype.markupFee = undefined;

/**
 * @member {Boolean} isCap
 */
CreateCostPlanOptionsDto.prototype.isCap = undefined;

/**
 * @member {Number} exchangeCap
 */
CreateCostPlanOptionsDto.prototype.exchangeCap = undefined;

